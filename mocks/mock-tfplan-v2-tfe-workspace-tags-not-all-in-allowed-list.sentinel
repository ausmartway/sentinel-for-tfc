terraform_version = "1.0.7"

planned_values = {
	"outputs": {},
	"resources": {
		"module.vcs-connected-workspace[\"vcs-sentinel-dev\"].github_repository.repo": {
			"address":        "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].github_repository.repo",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
			"name":           "repo",
			"provider_name":  "registry.terraform.io/integrations/github",
			"tainted":        false,
			"type":           "github_repository",
			"values": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"default_branch":         "main",
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-sentinel-dev",
				"etag":                   "W/\"4906460e2d262a9179da1e0094c2b56b9b60756dbb07474e399f0179aa015762\"",
				"full_name":              "ausmartway/vcs-sentinel-dev",
				"git_clone_url":          "git://github.com/ausmartway/vcs-sentinel-dev.git",
				"gitignore_template":     null,
				"has_downloads":          false,
				"has_issues":             false,
				"has_projects":           false,
				"has_wiki":               false,
				"homepage_url":           "",
				"html_url":               "https://github.com/ausmartway/vcs-sentinel-dev",
				"http_clone_url":         "https://github.com/ausmartway/vcs-sentinel-dev.git",
				"id":                     "vcs-sentinel-dev",
				"is_template":            false,
				"license_template":       null,
				"name":                   "vcs-sentinel-dev",
				"node_id":                "R_kgDOGGExbA",
				"pages":                  [],
				"private":                true,
				"repo_id":                409022828,
				"ssh_clone_url":          "git@github.com:ausmartway/vcs-sentinel-dev.git",
				"svn_url":                "https://github.com/ausmartway/vcs-sentinel-dev",
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               [],
				"visibility":           "private",
				"vulnerability_alerts": false,
			},
		},
		"module.vcs-connected-workspace[\"vcs-sentinel-dev\"].tfe_workspace.workspace": {
			"address":        "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].tfe_workspace.workspace",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
			"name":           "workspace",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "this is a workspace for developing sentinel",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-9Vm5uBAKTt21Wfao",
				"name":                          "vcs-sentinel-dev",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"sentinel",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vcs-sentinel-dev",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].github_repository.repo": {
			"address":        "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].github_repository.repo",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"]",
			"name":           "repo",
			"provider_name":  "registry.terraform.io/integrations/github",
			"tainted":        false,
			"type":           "github_repository",
			"values": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-sentinel-mock-generator",
				"gitignore_template":     null,
				"has_downloads":          null,
				"has_issues":             null,
				"has_projects":           null,
				"has_wiki":               null,
				"homepage_url":           null,
				"is_template":            null,
				"license_template":       null,
				"name":                   "vcs-sentinel-mock-generator",
				"pages":                  [],
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               null,
				"visibility":           "private",
				"vulnerability_alerts": null,
			},
		},
		"module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].tfe_workspace.workspace": {
			"address":        "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].tfe_workspace.workspace",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"]",
			"name":           "workspace",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":                 null,
				"allow_destroy_plan":            true,
				"auto_apply":                    true,
				"description":                   "this is a test workspace",
				"execution_mode":                "remote",
				"file_triggers_enabled":         false,
				"global_remote_state":           false,
				"name":                          "vcs-sentinel-mock-generator",
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    null,
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
					"badmock",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             null,
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": null,
			},
		},
		"module.vcs-connected-workspace[\"vcs-workspaceone\"].github_repository.repo": {
			"address":        "module.vcs-connected-workspace[\"vcs-workspaceone\"].github_repository.repo",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
			"name":           "repo",
			"provider_name":  "registry.terraform.io/integrations/github",
			"tainted":        false,
			"type":           "github_repository",
			"values": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"default_branch":         "main",
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-workspaceone",
				"etag":                   "W/\"42fb55d146e5ed328e184def6d23d551c3bfc6bf7d844b6a4d8ed96efefc0679\"",
				"full_name":              "ausmartway/vcs-workspaceone",
				"git_clone_url":          "git://github.com/ausmartway/vcs-workspaceone.git",
				"gitignore_template":     null,
				"has_downloads":          false,
				"has_issues":             false,
				"has_projects":           false,
				"has_wiki":               false,
				"homepage_url":           "",
				"html_url":               "https://github.com/ausmartway/vcs-workspaceone",
				"http_clone_url":         "https://github.com/ausmartway/vcs-workspaceone.git",
				"id":                     "vcs-workspaceone",
				"is_template":            false,
				"license_template":       null,
				"name":                   "vcs-workspaceone",
				"node_id":                "R_kgDOGFyRlg",
				"pages":                  [],
				"private":                true,
				"repo_id":                408719766,
				"ssh_clone_url":          "git@github.com:ausmartway/vcs-workspaceone.git",
				"svn_url":                "https://github.com/ausmartway/vcs-workspaceone",
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               null,
				"visibility":           "private",
				"vulnerability_alerts": false,
			},
		},
		"module.vcs-connected-workspace[\"vcs-workspaceone\"].tfe_workspace.workspace": {
			"address":        "module.vcs-connected-workspace[\"vcs-workspaceone\"].tfe_workspace.workspace",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
			"name":           "workspace",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "this is a test workspace",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-21PADxvPVSoPhhY4",
				"name":                          "vcs-workspaceone",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vcs-workspaceone",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_oauth_client.github-a": {
			"address":        "tfe_oauth_client.github-a",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "github-a",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_oauth_client",
			"values": {
				"api_url":          "https://api.github.com",
				"http_url":         "https://github.com",
				"id":               "oc-t3GmujcL2wrtPtVw",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-ECRp7Q8bau6wDuba",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "github",
			},
		},
		"tfe_oauth_client.github-b": {
			"address":        "tfe_oauth_client.github-b",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "github-b",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_oauth_client",
			"values": {
				"api_url":          "https://api.github.com",
				"http_url":         "https://github.com",
				"id":               "oc-SGAjYbawuMtrsVdi",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-ojKu4mCdGeqTauNo",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "github",
			},
		},
		"tfe_oauth_client.gitlab-a": {
			"address":        "tfe_oauth_client.gitlab-a",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "gitlab-a",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_oauth_client",
			"values": {
				"api_url":          "https://gitlab.com/api/v4",
				"http_url":         "https://gitlab.com",
				"id":               "oc-aYUXRhfWXVSavhTC",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-19AYi7if8fjhffFP",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "gitlab_hosted",
			},
		},
		"tfe_oauth_client.gitlab-b": {
			"address":        "tfe_oauth_client.gitlab-b",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "gitlab-b",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_oauth_client",
			"values": {
				"api_url":          "https://gitlab.com/api/v4",
				"http_url":         "https://gitlab.com",
				"id":               "oc-fvJx34NHKZqH7PaR",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-w2DuTSTfyhqDm3tS",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "gitlab_hosted",
			},
		},
		"tfe_run_trigger.auto_trigger_tfc-credential-injector": {
			"address":        "tfe_run_trigger.auto_trigger_tfc-credential-injector",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "auto_trigger_tfc-credential-injector",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_run_trigger",
			"values": {
				"id":            "rt-CjdbnGnVzB2WMTne",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-AqoXHpbhwdLKroVw",
			},
		},
		"tfe_run_trigger.auto_trigger_tfc-notification-configurator": {
			"address":        "tfe_run_trigger.auto_trigger_tfc-notification-configurator",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "auto_trigger_tfc-notification-configurator",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_run_trigger",
			"values": {
				"id":            "rt-bCSKhTJa5UGZZA3X",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-NnA88UfvetLFM9JX",
			},
		},
		"tfe_run_trigger.auto_trigger_tfc-policy-attacher": {
			"address":        "tfe_run_trigger.auto_trigger_tfc-policy-attacher",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "auto_trigger_tfc-policy-attacher",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_run_trigger",
			"values": {
				"id":            "rt-b3RZ8Ce4MbGPNykd",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-Hqt6WoDvG4VjJRWV",
			},
		},
		"tfe_variable.aws-lambda-example-aws_region": {
			"address":        "tfe_variable.aws-lambda-example-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "aws-lambda-example-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-kKRoHMpVMj1cajMo",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-s3arZoJTyfvg32YM",
			},
		},
		"tfe_variable.aws-s3-demo-aws_region": {
			"address":        "tfe_variable.aws-s3-demo-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "aws-s3-demo-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-o6jsEdkNosgeNLYV",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-fypzJQtNiwEPTsFp",
			},
		},
		"tfe_variable.aws-shared-infra-aws_region": {
			"address":        "tfe_variable.aws-shared-infra-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "aws-shared-infra-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-6LxWKub7QWq4APJT",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-MiQBojMDAVpxnSEN",
			},
		},
		"tfe_variable.multi-env-provisioning-example-0-test-aws_region": {
			"address":        "tfe_variable.multi-env-provisioning-example-0-test-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multi-env-provisioning-example-0-test-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-C7h9fWokXE34NAic",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-RW99m8Qucacx6t2P",
			},
		},
		"tfe_variable.multi-env-provisioning-example-1-staging-aws_region": {
			"address":        "tfe_variable.multi-env-provisioning-example-1-staging-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multi-env-provisioning-example-1-staging-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-jR1g6aC7dFwQM89q",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-tQj6j9SPMRLAXrmF",
			},
		},
		"tfe_variable.multi-env-provisioning-example-2-prod-aws_region": {
			"address":        "tfe_variable.multi-env-provisioning-example-2-prod-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multi-env-provisioning-example-2-prod-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-MR6MZi14nrJU87pQ",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-QuU3xTMss2VAcRHy",
			},
		},
		"tfe_variable.multicloud-dns-management-aws_region": {
			"address":        "tfe_variable.multicloud-dns-management-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multicloud-dns-management-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-jhAUNhkdqDev2izC",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-ZedC2mWXBZu9paho",
			},
		},
		"tfe_variable.terraform-aws-vault-demo-aws_region": {
			"address":        "tfe_variable.terraform-aws-vault-demo-aws_region",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "terraform-aws-vault-demo-aws_region",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-VVTfpnMZNQUgNrtY",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-YGA4SmRLBbDv1jkP",
			},
		},
		"tfe_variable.tfc-policyset-attacher-orgnization": {
			"address":        "tfe_variable.tfc-policyset-attacher-orgnization",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "tfc-policyset-attacher-orgnization",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "terraform",
				"description":  "TFC/E organization",
				"hcl":          false,
				"id":           "var-LkBpeoQMWtBdwKiw",
				"key":          "organization",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
			},
		},
		"tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id": {
			"address":        "tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "tfc-policyset-attacher-tfc_oauth_token_id",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_variable",
			"values": {
				"category":     "terraform",
				"description":  "VCS connection oauth token id",
				"hcl":          false,
				"id":           "var-eq5XaDFH9rYnvKhS",
				"key":          "tfc_oauth_token_id",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
			},
		},
		"tfe_workspace.aws-lambda-example": {
			"address":        "tfe_workspace.aws-lambda-example",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "aws-lambda-example",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Demo workspace for deploying lambda functions.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-s3arZoJTyfvg32YM",
				"name":                          "aws-lambda-example",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/aws-lambda-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.aws-s3-demo": {
			"address":        "tfe_workspace.aws-s3-demo",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "aws-s3-demo",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-fypzJQtNiwEPTsFp",
				"name":                          "aws-s3-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/aws-s3-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.aws-shared-infra": {
			"address":        "tfe_workspace.aws-shared-infra",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "aws-shared-infra",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "My core aws infrustructure that are shared by other workspaces.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-MiQBojMDAVpxnSEN",
				"name":                          "aws-shared-infra",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"internal",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/terraform-aws-core",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.azure-shared-infra": {
			"address":        "tfe_workspace.azure-shared-infra",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "azure-shared-infra",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Core azure infra",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-1udCpTYjSbHKAztQ",
				"name":                          "azure-shared-infra",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"azure",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/azure-shared-infra",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.azure-simple-demo": {
			"address":        "tfe_workspace.azure-simple-demo",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "azure-simple-demo",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo of deploying Azure resources.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-8eq1qbSakTSYn1G1",
				"name":                          "azure-simple-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"azure",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/azure-basic-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.gcp-playground": {
			"address":        "tfe_workspace.gcp-playground",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "gcp-playground",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo of deploying gcp resources.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-u6uJ91U3VSWVv8R9",
				"name":                          "gcp-playground",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"customerfacing",
					"gcp",
					"internal",
					"testing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/gcp-playground",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.multi-env-provisioning-example-0-test": {
			"address":        "tfe_workspace.multi-env-provisioning-example-0-test",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multi-env-provisioning-example-0-test",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-RW99m8Qucacx6t2P",
				"name":                          "multi-env-provisioning-example-0-test",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.multi-env-provisioning-example-1-staging": {
			"address":        "tfe_workspace.multi-env-provisioning-example-1-staging",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multi-env-provisioning-example-1-staging",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-tQj6j9SPMRLAXrmF",
				"name":                          "multi-env-provisioning-example-1-staging",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.multi-env-provisioning-example-2-prod": {
			"address":        "tfe_workspace.multi-env-provisioning-example-2-prod",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multi-env-provisioning-example-2-prod",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-QuU3xTMss2VAcRHy",
				"name":                          "multi-env-provisioning-example-2-prod",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.multicloud-dns-management": {
			"address":        "tfe_workspace.multicloud-dns-management",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "multicloud-dns-management",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Manages my aws/azure/gcp DNS records using aws route53.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-ZedC2mWXBZu9paho",
				"name":                          "multicloud-dns-management",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
					"gcp",
					"internal",
				],
				"terraform_version": "0.12.31",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/dns-multicloud",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.terraform-aws-vault-demo": {
			"address":        "tfe_workspace.terraform-aws-vault-demo",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "terraform-aws-vault-demo",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that standup a demo vault instance.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-YGA4SmRLBbDv1jkP",
				"name":                          "terraform-aws-vault-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"internal",
					"vault",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/terraform-aws-vault-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.tfc-config-as-code": {
			"address":        "tfe_workspace.tfc-config-as-code",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "tfc-config-as-code",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
				"execution_mode":        "remote",
				"file_triggers_enabled": true,
				"global_remote_state":   false,
				"id":                            "ws-seQ28ryqi1xfKRr1",
				"name":                          "tfc-config-as-code",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-config-as-code",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.tfc-credential-injector": {
			"address":        "tfe_workspace.tfc-credential-injector",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "tfc-credential-injector",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-AqoXHpbhwdLKroVw",
				"name":                          "tfc-credential-injector",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-credential-injector",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.tfc-notification-configurator": {
			"address":        "tfe_workspace.tfc-notification-configurator",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "tfc-notification-configurator",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-NnA88UfvetLFM9JX",
				"name":                          "tfc-notification-configurator",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-notification-configurator",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.tfc-policyset-attacher": {
			"address":        "tfe_workspace.tfc-policyset-attacher",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "tfc-policyset-attacher",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-Hqt6WoDvG4VjJRWV",
				"name":                          "tfc-policyset-attacher",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-policyset-attacher",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"tfe_workspace.vault-config-as-code": {
			"address":        "tfe_workspace.vault-config-as-code",
			"depends_on":     [],
			"deposed_key":    "",
			"index":          null,
			"mode":           "managed",
			"module_address": "",
			"name":           "vault-config-as-code",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"tainted":        false,
			"type":           "tfe_workspace",
			"values": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that's used to manage my own Vault's configuration as code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-a7NAPAZ1c38P8u4U",
				"name":                          "vault-config-as-code",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"aws",
					"customerfacing",
					"vault",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vault-config-as-code",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
	},
}

variables = {
	"aws_default_region": {
		"name":  "aws_default_region",
		"value": "ap-southeast-2",
	},
	"github_personal_token": {
		"name":  "github_personal_token",
		"value": "REDACTED_SENSITIVE",
	},
	"gitlab_personal_token": {
		"name":  "gitlab_personal_token",
		"value": "REDACTED_SENSITIVE",
	},
	"organization": {
		"name":  "organization",
		"value": "yulei",
	},
	"tfe_token": {
		"name":  "tfe_token",
		"value": "REDACTED_SENSITIVE",
	},
}

resource_changes = {
	"module.vcs-connected-workspace[\"vcs-sentinel-dev\"].github_repository.repo": {
		"address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].github_repository.repo",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"default_branch":         "main",
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-sentinel-dev",
				"etag":                   "W/\"4906460e2d262a9179da1e0094c2b56b9b60756dbb07474e399f0179aa015762\"",
				"full_name":              "ausmartway/vcs-sentinel-dev",
				"git_clone_url":          "git://github.com/ausmartway/vcs-sentinel-dev.git",
				"gitignore_template":     null,
				"has_downloads":          false,
				"has_issues":             false,
				"has_projects":           false,
				"has_wiki":               false,
				"homepage_url":           "",
				"html_url":               "https://github.com/ausmartway/vcs-sentinel-dev",
				"http_clone_url":         "https://github.com/ausmartway/vcs-sentinel-dev.git",
				"id":                     "vcs-sentinel-dev",
				"is_template":            false,
				"license_template":       null,
				"name":                   "vcs-sentinel-dev",
				"node_id":                "R_kgDOGGExbA",
				"pages":                  [],
				"private":                true,
				"repo_id":                409022828,
				"ssh_clone_url":          "git@github.com:ausmartway/vcs-sentinel-dev.git",
				"svn_url":                "https://github.com/ausmartway/vcs-sentinel-dev",
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               [],
				"visibility":           "private",
				"vulnerability_alerts": false,
			},
			"after_unknown": {},
			"before": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"default_branch":         "main",
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-sentinel-dev",
				"etag":                   "W/\"4906460e2d262a9179da1e0094c2b56b9b60756dbb07474e399f0179aa015762\"",
				"full_name":              "ausmartway/vcs-sentinel-dev",
				"git_clone_url":          "git://github.com/ausmartway/vcs-sentinel-dev.git",
				"gitignore_template":     null,
				"has_downloads":          false,
				"has_issues":             false,
				"has_projects":           false,
				"has_wiki":               false,
				"homepage_url":           "",
				"html_url":               "https://github.com/ausmartway/vcs-sentinel-dev",
				"http_clone_url":         "https://github.com/ausmartway/vcs-sentinel-dev.git",
				"id":                     "vcs-sentinel-dev",
				"is_template":            false,
				"license_template":       null,
				"name":                   "vcs-sentinel-dev",
				"node_id":                "R_kgDOGGExbA",
				"pages":                  [],
				"private":                true,
				"repo_id":                409022828,
				"ssh_clone_url":          "git@github.com:ausmartway/vcs-sentinel-dev.git",
				"svn_url":                "https://github.com/ausmartway/vcs-sentinel-dev",
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               [],
				"visibility":           "private",
				"vulnerability_alerts": false,
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
		"name":           "repo",
		"provider_name":  "registry.terraform.io/integrations/github",
		"type":           "github_repository",
	},
	"module.vcs-connected-workspace[\"vcs-sentinel-dev\"].tfe_workspace.workspace": {
		"address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].tfe_workspace.workspace",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "this is a workspace for developing sentinel",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-9Vm5uBAKTt21Wfao",
				"name":                          "vcs-sentinel-dev",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"sentinel",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vcs-sentinel-dev",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "this is a workspace for developing sentinel",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-9Vm5uBAKTt21Wfao",
				"name":                          "vcs-sentinel-dev",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"sentinel",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vcs-sentinel-dev",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
		"name":           "workspace",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].github_repository.repo": {
		"address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].github_repository.repo",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-sentinel-mock-generator",
				"gitignore_template":     null,
				"has_downloads":          null,
				"has_issues":             null,
				"has_projects":           null,
				"has_wiki":               null,
				"homepage_url":           null,
				"is_template":            null,
				"license_template":       null,
				"name":                   "vcs-sentinel-mock-generator",
				"pages":                  [],
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               null,
				"visibility":           "private",
				"vulnerability_alerts": null,
			},
			"after_unknown": {
				"default_branch": true,
				"etag":           true,
				"full_name":      true,
				"git_clone_url":  true,
				"html_url":       true,
				"http_clone_url": true,
				"id":             true,
				"node_id":        true,
				"pages":          [],
				"private":        true,
				"repo_id":        true,
				"ssh_clone_url":  true,
				"svn_url":        true,
				"template": [
					{},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"]",
		"name":           "repo",
		"provider_name":  "registry.terraform.io/integrations/github",
		"type":           "github_repository",
	},
	"module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].tfe_workspace.workspace": {
		"address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].tfe_workspace.workspace",
		"change": {
			"actions": [
				"create",
			],
			"after": {
				"agent_pool_id":                 null,
				"allow_destroy_plan":            true,
				"auto_apply":                    true,
				"description":                   "this is a test workspace",
				"execution_mode":                "remote",
				"file_triggers_enabled":         false,
				"global_remote_state":           false,
				"name":                          "vcs-sentinel-mock-generator",
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    null,
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
					"badmock",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             null,
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": null,
			},
			"after_unknown": {
				"id":         true,
				"operations": true,
				"tag_names": [
					false,
					false,
					false,
					false,
				],
				"trigger_prefixes": [],
				"vcs_repo": [
					{
						"identifier": true,
					},
				],
			},
			"before": null,
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"]",
		"name":           "workspace",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"module.vcs-connected-workspace[\"vcs-workspaceone\"].github_repository.repo": {
		"address": "module.vcs-connected-workspace[\"vcs-workspaceone\"].github_repository.repo",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"default_branch":         "main",
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-workspaceone",
				"etag":                   "W/\"42fb55d146e5ed328e184def6d23d551c3bfc6bf7d844b6a4d8ed96efefc0679\"",
				"full_name":              "ausmartway/vcs-workspaceone",
				"git_clone_url":          "git://github.com/ausmartway/vcs-workspaceone.git",
				"gitignore_template":     null,
				"has_downloads":          false,
				"has_issues":             false,
				"has_projects":           false,
				"has_wiki":               false,
				"homepage_url":           "",
				"html_url":               "https://github.com/ausmartway/vcs-workspaceone",
				"http_clone_url":         "https://github.com/ausmartway/vcs-workspaceone.git",
				"id":                     "vcs-workspaceone",
				"is_template":            false,
				"license_template":       null,
				"name":                   "vcs-workspaceone",
				"node_id":                "R_kgDOGFyRlg",
				"pages":                  [],
				"private":                true,
				"repo_id":                408719766,
				"ssh_clone_url":          "git@github.com:ausmartway/vcs-workspaceone.git",
				"svn_url":                "https://github.com/ausmartway/vcs-workspaceone",
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               null,
				"visibility":           "private",
				"vulnerability_alerts": false,
			},
			"after_unknown": {},
			"before": {
				"allow_merge_commit":     true,
				"allow_rebase_merge":     true,
				"allow_squash_merge":     true,
				"archive_on_destroy":     null,
				"archived":               false,
				"auto_init":              null,
				"default_branch":         "main",
				"delete_branch_on_merge": false,
				"description":            "Github repository for TFC workspace vcs-workspaceone",
				"etag":                   "W/\"42fb55d146e5ed328e184def6d23d551c3bfc6bf7d844b6a4d8ed96efefc0679\"",
				"full_name":              "ausmartway/vcs-workspaceone",
				"git_clone_url":          "git://github.com/ausmartway/vcs-workspaceone.git",
				"gitignore_template":     null,
				"has_downloads":          false,
				"has_issues":             false,
				"has_projects":           false,
				"has_wiki":               false,
				"homepage_url":           "",
				"html_url":               "https://github.com/ausmartway/vcs-workspaceone",
				"http_clone_url":         "https://github.com/ausmartway/vcs-workspaceone.git",
				"id":                     "vcs-workspaceone",
				"is_template":            false,
				"license_template":       null,
				"name":                   "vcs-workspaceone",
				"node_id":                "R_kgDOGFyRlg",
				"pages":                  [],
				"private":                true,
				"repo_id":                408719766,
				"ssh_clone_url":          "git@github.com:ausmartway/vcs-workspaceone.git",
				"svn_url":                "https://github.com/ausmartway/vcs-workspaceone",
				"template": [
					{
						"owner":      "ausmartway",
						"repository": "terraform-template",
					},
				],
				"topics":               null,
				"visibility":           "private",
				"vulnerability_alerts": false,
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
		"name":           "repo",
		"provider_name":  "registry.terraform.io/integrations/github",
		"type":           "github_repository",
	},
	"module.vcs-connected-workspace[\"vcs-workspaceone\"].tfe_workspace.workspace": {
		"address": "module.vcs-connected-workspace[\"vcs-workspaceone\"].tfe_workspace.workspace",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "this is a test workspace",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-21PADxvPVSoPhhY4",
				"name":                          "vcs-workspaceone",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vcs-workspaceone",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "this is a test workspace",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-21PADxvPVSoPhhY4",
				"name":                          "vcs-workspaceone",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vcs-workspaceone",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
		"name":           "workspace",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_oauth_client.github-a": {
		"address": "tfe_oauth_client.github-a",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"api_url":          "https://api.github.com",
				"http_url":         "https://github.com",
				"id":               "oc-t3GmujcL2wrtPtVw",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-ECRp7Q8bau6wDuba",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "github",
			},
			"after_unknown": {},
			"before": {
				"api_url":          "https://api.github.com",
				"http_url":         "https://github.com",
				"id":               "oc-t3GmujcL2wrtPtVw",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-ECRp7Q8bau6wDuba",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "github",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "github-a",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_oauth_client",
	},
	"tfe_oauth_client.github-b": {
		"address": "tfe_oauth_client.github-b",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"api_url":          "https://api.github.com",
				"http_url":         "https://github.com",
				"id":               "oc-SGAjYbawuMtrsVdi",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-ojKu4mCdGeqTauNo",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "github",
			},
			"after_unknown": {},
			"before": {
				"api_url":          "https://api.github.com",
				"http_url":         "https://github.com",
				"id":               "oc-SGAjYbawuMtrsVdi",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-ojKu4mCdGeqTauNo",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "github",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "github-b",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_oauth_client",
	},
	"tfe_oauth_client.gitlab-a": {
		"address": "tfe_oauth_client.gitlab-a",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"api_url":          "https://gitlab.com/api/v4",
				"http_url":         "https://gitlab.com",
				"id":               "oc-aYUXRhfWXVSavhTC",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-19AYi7if8fjhffFP",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "gitlab_hosted",
			},
			"after_unknown": {},
			"before": {
				"api_url":          "https://gitlab.com/api/v4",
				"http_url":         "https://gitlab.com",
				"id":               "oc-aYUXRhfWXVSavhTC",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-19AYi7if8fjhffFP",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "gitlab_hosted",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "gitlab-a",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_oauth_client",
	},
	"tfe_oauth_client.gitlab-b": {
		"address": "tfe_oauth_client.gitlab-b",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"api_url":          "https://gitlab.com/api/v4",
				"http_url":         "https://gitlab.com",
				"id":               "oc-fvJx34NHKZqH7PaR",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-w2DuTSTfyhqDm3tS",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "gitlab_hosted",
			},
			"after_unknown": {},
			"before": {
				"api_url":          "https://gitlab.com/api/v4",
				"http_url":         "https://gitlab.com",
				"id":               "oc-fvJx34NHKZqH7PaR",
				"oauth_token":      "REDACTED_SENSITIVE",
				"oauth_token_id":   "ot-w2DuTSTfyhqDm3tS",
				"organization":     "yulei",
				"private_key":      null,
				"service_provider": "gitlab_hosted",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "gitlab-b",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_oauth_client",
	},
	"tfe_run_trigger.auto_trigger_tfc-credential-injector": {
		"address": "tfe_run_trigger.auto_trigger_tfc-credential-injector",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"id":            "rt-CjdbnGnVzB2WMTne",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-AqoXHpbhwdLKroVw",
			},
			"after_unknown": {},
			"before": {
				"id":            "rt-CjdbnGnVzB2WMTne",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-AqoXHpbhwdLKroVw",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "auto_trigger_tfc-credential-injector",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_run_trigger",
	},
	"tfe_run_trigger.auto_trigger_tfc-notification-configurator": {
		"address": "tfe_run_trigger.auto_trigger_tfc-notification-configurator",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"id":            "rt-bCSKhTJa5UGZZA3X",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-NnA88UfvetLFM9JX",
			},
			"after_unknown": {},
			"before": {
				"id":            "rt-bCSKhTJa5UGZZA3X",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-NnA88UfvetLFM9JX",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "auto_trigger_tfc-notification-configurator",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_run_trigger",
	},
	"tfe_run_trigger.auto_trigger_tfc-policy-attacher": {
		"address": "tfe_run_trigger.auto_trigger_tfc-policy-attacher",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"id":            "rt-b3RZ8Ce4MbGPNykd",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-Hqt6WoDvG4VjJRWV",
			},
			"after_unknown": {},
			"before": {
				"id":            "rt-b3RZ8Ce4MbGPNykd",
				"sourceable_id": "ws-seQ28ryqi1xfKRr1",
				"workspace_id":  "ws-Hqt6WoDvG4VjJRWV",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "auto_trigger_tfc-policy-attacher",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_run_trigger",
	},
	"tfe_variable.aws-lambda-example-aws_region": {
		"address": "tfe_variable.aws-lambda-example-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-kKRoHMpVMj1cajMo",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-s3arZoJTyfvg32YM",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-kKRoHMpVMj1cajMo",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-s3arZoJTyfvg32YM",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "aws-lambda-example-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.aws-s3-demo-aws_region": {
		"address": "tfe_variable.aws-s3-demo-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-o6jsEdkNosgeNLYV",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-fypzJQtNiwEPTsFp",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-o6jsEdkNosgeNLYV",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-fypzJQtNiwEPTsFp",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "aws-s3-demo-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.aws-shared-infra-aws_region": {
		"address": "tfe_variable.aws-shared-infra-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-6LxWKub7QWq4APJT",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-MiQBojMDAVpxnSEN",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-6LxWKub7QWq4APJT",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-MiQBojMDAVpxnSEN",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "aws-shared-infra-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.multi-env-provisioning-example-0-test-aws_region": {
		"address": "tfe_variable.multi-env-provisioning-example-0-test-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-C7h9fWokXE34NAic",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-RW99m8Qucacx6t2P",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-C7h9fWokXE34NAic",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-RW99m8Qucacx6t2P",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multi-env-provisioning-example-0-test-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.multi-env-provisioning-example-1-staging-aws_region": {
		"address": "tfe_variable.multi-env-provisioning-example-1-staging-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-jR1g6aC7dFwQM89q",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-tQj6j9SPMRLAXrmF",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-jR1g6aC7dFwQM89q",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-tQj6j9SPMRLAXrmF",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multi-env-provisioning-example-1-staging-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.multi-env-provisioning-example-2-prod-aws_region": {
		"address": "tfe_variable.multi-env-provisioning-example-2-prod-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-MR6MZi14nrJU87pQ",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-QuU3xTMss2VAcRHy",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-MR6MZi14nrJU87pQ",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-QuU3xTMss2VAcRHy",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multi-env-provisioning-example-2-prod-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.multicloud-dns-management-aws_region": {
		"address": "tfe_variable.multicloud-dns-management-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-jhAUNhkdqDev2izC",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-ZedC2mWXBZu9paho",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-jhAUNhkdqDev2izC",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-ZedC2mWXBZu9paho",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multicloud-dns-management-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.terraform-aws-vault-demo-aws_region": {
		"address": "tfe_variable.terraform-aws-vault-demo-aws_region",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-VVTfpnMZNQUgNrtY",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-YGA4SmRLBbDv1jkP",
			},
			"after_unknown": {},
			"before": {
				"category":     "env",
				"description":  "AWS REGION",
				"hcl":          false,
				"id":           "var-VVTfpnMZNQUgNrtY",
				"key":          "AWS_REGION",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-YGA4SmRLBbDv1jkP",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "terraform-aws-vault-demo-aws_region",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.tfc-policyset-attacher-orgnization": {
		"address": "tfe_variable.tfc-policyset-attacher-orgnization",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "terraform",
				"description":  "TFC/E organization",
				"hcl":          false,
				"id":           "var-LkBpeoQMWtBdwKiw",
				"key":          "organization",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
			},
			"after_unknown": {},
			"before": {
				"category":     "terraform",
				"description":  "TFC/E organization",
				"hcl":          false,
				"id":           "var-LkBpeoQMWtBdwKiw",
				"key":          "organization",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "tfc-policyset-attacher-orgnization",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id": {
		"address": "tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"category":     "terraform",
				"description":  "VCS connection oauth token id",
				"hcl":          false,
				"id":           "var-eq5XaDFH9rYnvKhS",
				"key":          "tfc_oauth_token_id",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
			},
			"after_unknown": {},
			"before": {
				"category":     "terraform",
				"description":  "VCS connection oauth token id",
				"hcl":          false,
				"id":           "var-eq5XaDFH9rYnvKhS",
				"key":          "tfc_oauth_token_id",
				"sensitive":    false,
				"value":        "REDACTED_SENSITIVE",
				"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "tfc-policyset-attacher-tfc_oauth_token_id",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_variable",
	},
	"tfe_workspace.aws-lambda-example": {
		"address": "tfe_workspace.aws-lambda-example",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Demo workspace for deploying lambda functions.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-s3arZoJTyfvg32YM",
				"name":                          "aws-lambda-example",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/aws-lambda-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Demo workspace for deploying lambda functions.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-s3arZoJTyfvg32YM",
				"name":                          "aws-lambda-example",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/aws-lambda-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "aws-lambda-example",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.aws-s3-demo": {
		"address": "tfe_workspace.aws-s3-demo",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-fypzJQtNiwEPTsFp",
				"name":                          "aws-s3-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/aws-s3-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-fypzJQtNiwEPTsFp",
				"name":                          "aws-s3-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/aws-s3-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "aws-s3-demo",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.aws-shared-infra": {
		"address": "tfe_workspace.aws-shared-infra",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "My core aws infrustructure that are shared by other workspaces.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-MiQBojMDAVpxnSEN",
				"name":                          "aws-shared-infra",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"internal",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/terraform-aws-core",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "My core aws infrustructure that are shared by other workspaces.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-MiQBojMDAVpxnSEN",
				"name":                          "aws-shared-infra",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"internal",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/terraform-aws-core",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "aws-shared-infra",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.azure-shared-infra": {
		"address": "tfe_workspace.azure-shared-infra",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Core azure infra",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-1udCpTYjSbHKAztQ",
				"name":                          "azure-shared-infra",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"azure",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/azure-shared-infra",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Core azure infra",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-1udCpTYjSbHKAztQ",
				"name":                          "azure-shared-infra",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"azure",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/azure-shared-infra",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "azure-shared-infra",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.azure-simple-demo": {
		"address": "tfe_workspace.azure-simple-demo",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo of deploying Azure resources.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-8eq1qbSakTSYn1G1",
				"name":                          "azure-simple-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"azure",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/azure-basic-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo of deploying Azure resources.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-8eq1qbSakTSYn1G1",
				"name":                          "azure-simple-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"azure",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/azure-basic-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "azure-simple-demo",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.gcp-playground": {
		"address": "tfe_workspace.gcp-playground",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo of deploying gcp resources.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-u6uJ91U3VSWVv8R9",
				"name":                          "gcp-playground",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"customerfacing",
					"gcp",
					"internal",
					"testing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/gcp-playground",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A simple demo of deploying gcp resources.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-u6uJ91U3VSWVv8R9",
				"name":                          "gcp-playground",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"customerfacing",
					"gcp",
					"internal",
					"testing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/gcp-playground",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "gcp-playground",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.multi-env-provisioning-example-0-test": {
		"address": "tfe_workspace.multi-env-provisioning-example-0-test",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-RW99m8Qucacx6t2P",
				"name":                          "multi-env-provisioning-example-0-test",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-RW99m8Qucacx6t2P",
				"name":                          "multi-env-provisioning-example-0-test",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multi-env-provisioning-example-0-test",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.multi-env-provisioning-example-1-staging": {
		"address": "tfe_workspace.multi-env-provisioning-example-1-staging",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-tQj6j9SPMRLAXrmF",
				"name":                          "multi-env-provisioning-example-1-staging",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-tQj6j9SPMRLAXrmF",
				"name":                          "multi-env-provisioning-example-1-staging",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multi-env-provisioning-example-1-staging",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.multi-env-provisioning-example-2-prod": {
		"address": "tfe_workspace.multi-env-provisioning-example-2-prod",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-QuU3xTMss2VAcRHy",
				"name":                          "multi-env-provisioning-example-2-prod",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-QuU3xTMss2VAcRHy",
				"name":                          "multi-env-provisioning-example-2-prod",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"customerfacing",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/multi-env-provisioning-example",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multi-env-provisioning-example-2-prod",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.multicloud-dns-management": {
		"address": "tfe_workspace.multicloud-dns-management",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Manages my aws/azure/gcp DNS records using aws route53.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-ZedC2mWXBZu9paho",
				"name":                          "multicloud-dns-management",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
					"gcp",
					"internal",
				],
				"terraform_version": "0.12.31",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/dns-multicloud",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Manages my aws/azure/gcp DNS records using aws route53.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-ZedC2mWXBZu9paho",
				"name":                          "multicloud-dns-management",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
					"gcp",
					"internal",
				],
				"terraform_version": "0.12.31",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/dns-multicloud",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "multicloud-dns-management",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.terraform-aws-vault-demo": {
		"address": "tfe_workspace.terraform-aws-vault-demo",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that standup a demo vault instance.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-YGA4SmRLBbDv1jkP",
				"name":                          "terraform-aws-vault-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"internal",
					"vault",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/terraform-aws-vault-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that standup a demo vault instance.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   true,
				"id":                            "ws-YGA4SmRLBbDv1jkP",
				"name":                          "terraform-aws-vault-demo",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     null,
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"internal",
					"vault",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/terraform-aws-vault-demo",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "terraform-aws-vault-demo",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.tfc-config-as-code": {
		"address": "tfe_workspace.tfc-config-as-code",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
				"execution_mode":        "remote",
				"file_triggers_enabled": true,
				"global_remote_state":   false,
				"id":                            "ws-seQ28ryqi1xfKRr1",
				"name":                          "tfc-config-as-code",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-config-as-code",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
				"execution_mode":        "remote",
				"file_triggers_enabled": true,
				"global_remote_state":   false,
				"id":                            "ws-seQ28ryqi1xfKRr1",
				"name":                          "tfc-config-as-code",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-config-as-code",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "tfc-config-as-code",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.tfc-credential-injector": {
		"address": "tfe_workspace.tfc-credential-injector",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-AqoXHpbhwdLKroVw",
				"name":                          "tfc-credential-injector",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-credential-injector",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-AqoXHpbhwdLKroVw",
				"name":                          "tfc-credential-injector",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-credential-injector",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "tfc-credential-injector",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.tfc-notification-configurator": {
		"address": "tfe_workspace.tfc-notification-configurator",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-NnA88UfvetLFM9JX",
				"name":                          "tfc-notification-configurator",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-notification-configurator",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-NnA88UfvetLFM9JX",
				"name":                          "tfc-notification-configurator",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-notification-configurator",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "tfc-notification-configurator",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.tfc-policyset-attacher": {
		"address": "tfe_workspace.tfc-policyset-attacher",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-Hqt6WoDvG4VjJRWV",
				"name":                          "tfc-policyset-attacher",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-policyset-attacher",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-Hqt6WoDvG4VjJRWV",
				"name":                          "tfc-policyset-attacher",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                true,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"internal",
					"management",
					"tfc",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/tfc-policyset-attacher",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "tfc-policyset-attacher",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.vault-config-as-code": {
		"address": "tfe_workspace.vault-config-as-code",
		"change": {
			"actions": [
				"no-op",
			],
			"after": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that's used to manage my own Vault's configuration as code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-a7NAPAZ1c38P8u4U",
				"name":                          "vault-config-as-code",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"aws",
					"customerfacing",
					"vault",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vault-config-as-code",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "A workspace that's used to manage my own Vault's configuration as code.",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-a7NAPAZ1c38P8u4U",
				"name":                          "vault-config-as-code",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           true,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"aws",
					"customerfacing",
					"vault",
				],
				"terraform_version": "1.0.7",
				"trigger_prefixes":  [],
				"vcs_repo": [
					{
						"branch":             "",
						"identifier":         "ausmartway/vault-config-as-code",
						"ingress_submodules": false,
						"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
					},
				],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          null,
		"mode":           "managed",
		"module_address": "",
		"name":           "vault-config-as-code",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
	"tfe_workspace.workspace[\"non-vcs-workspace-example-demo-for-bhp\"]": {
		"address": "tfe_workspace.workspace[\"non-vcs-workspace-example-demo-for-bhp\"]",
		"change": {
			"actions": [
				"delete",
			],
			"after":         null,
			"after_unknown": {},
			"before": {
				"agent_pool_id":         "",
				"allow_destroy_plan":    true,
				"auto_apply":            true,
				"description":           "non-vcs-workspace-example-demo-for-bhp",
				"execution_mode":        "remote",
				"file_triggers_enabled": false,
				"global_remote_state":   false,
				"id":                            "ws-suocxcRmS6p1cfin",
				"name":                          "non-vcs-workspace-example-demo-for-bhp",
				"operations":                    true,
				"organization":                  "yulei",
				"queue_all_runs":                false,
				"remote_state_consumer_ids":     [],
				"speculative_enabled":           false,
				"ssh_key_id":                    "",
				"structured_run_output_enabled": true,
				"tag_names": [
					"autoinject",
					"aws",
					"azure",
					"bhp",
					"customerfacing",
					"tfc",
				],
				"terraform_version": "1.0.6",
				"trigger_prefixes":  [],
				"vcs_repo":          [],
				"working_directory": "",
			},
		},
		"deposed":        "",
		"index":          "non-vcs-workspace-example-demo-for-bhp",
		"mode":           "managed",
		"module_address": "",
		"name":           "workspace",
		"provider_name":  "registry.terraform.io/hashicorp/tfe",
		"type":           "tfe_workspace",
	},
}

output_changes = {}

raw = {
	"configuration": {
		"provider_config": {
			"github": {
				"expressions": {
					"token": {
						"references": [
							"var.github_personal_token",
						],
					},
				},
				"name":               "github",
				"version_constraint": "~> 4.0",
			},
			"module.vcs-connected-workspace:github": {
				"module_address":     "module.vcs-connected-workspace",
				"name":               "github",
				"version_constraint": "~> 4.0",
			},
			"module.vcs-connected-workspace:tfe": {
				"module_address":     "module.vcs-connected-workspace",
				"name":               "tfe",
				"version_constraint": ">= 0.26.0",
			},
			"tfe": {
				"expressions": {
					"token": {
						"references": [
							"var.tfe_token",
						],
					},
				},
				"name":               "tfe",
				"version_constraint": ">= 0.26.1",
			},
		},
		"root_module": {
			"module_calls": {
				"vcs-connected-workspace": {
					"expressions": {
						"name": {
							"references": [
								"each.value.name",
								"each.value",
							],
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"tags": {
							"references": [
								"each.value.tags",
								"each.value",
							],
						},
						"terraform_version": {
							"references": [
								"each.value.version",
								"each.value",
							],
						},
						"tfc_oauth_token": {
							"references": [
								"local.tfc_oauth_token",
							],
						},
						"workspace_description": {
							"references": [
								"each.value.description",
								"each.value",
							],
						},
					},
					"for_each_expression": {
						"references": [
							"local.inputvcsworkspacemap",
						],
					},
					"module": {
						"outputs": {
							"repository_url": {
								"expression": {
									"references": [
										"github_repository.repo.full_name",
										"github_repository.repo",
									],
								},
							},
						},
						"resources": [
							{
								"address": "github_repository.repo",
								"expressions": {
									"description": {
										"references": [
											"var.name",
										],
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"template": [
										{
											"owner": {
												"references": [
													"var.github_owner",
												],
											},
											"repository": {
												"references": [
													"var.template_repo",
												],
											},
										},
									],
									"visibility": {
										"constant_value": "private",
									},
								},
								"mode":                "managed",
								"name":                "repo",
								"provider_config_key": "vcs-connected-workspace:github",
								"schema_version":      0,
								"type":                "github_repository",
							},
							{
								"address": "tfe_workspace.workspace",
								"expressions": {
									"allow_destroy_plan": {
										"constant_value": true,
									},
									"auto_apply": {
										"constant_value": true,
									},
									"description": {
										"references": [
											"var.workspace_description",
										],
									},
									"execution_mode": {
										"constant_value": "remote",
									},
									"file_triggers_enabled": {
										"constant_value": false,
									},
									"global_remote_state": {
										"constant_value": false,
									},
									"name": {
										"references": [
											"var.name",
										],
									},
									"organization": {
										"references": [
											"var.organization",
										],
									},
									"queue_all_runs": {
										"constant_value": true,
									},
									"speculative_enabled": {
										"constant_value": true,
									},
									"structured_run_output_enabled": {
										"constant_value": true,
									},
									"tag_names": {
										"references": [
											"var.tags",
										],
									},
									"terraform_version": {
										"references": [
											"var.terraform_version",
										],
									},
									"trigger_prefixes": {
										"constant_value": [],
									},
									"vcs_repo": [
										{
											"identifier": {
												"references": [
													"github_repository.repo.full_name",
													"github_repository.repo",
												],
											},
											"ingress_submodules": {
												"constant_value": false,
											},
											"oauth_token_id": {
												"references": [
													"var.tfc_oauth_token",
												],
											},
										},
									],
								},
								"mode":                "managed",
								"name":                "workspace",
								"provider_config_key": "vcs-connected-workspace:tfe",
								"schema_version":      1,
								"type":                "tfe_workspace",
							},
						],
						"variables": {
							"github_owner": {
								"default":     "ausmartway",
								"description": "the owner of the template repository, this can be github orgnization name.",
							},
							"name": {
								"description": "Name of the workspace, this will also be used as the name of the github.com repository.",
							},
							"organization": {
								"description": "TFC/E orgnization name",
							},
							"tags": {
								"default":     [],
								"description": "list of tags that should be added to workspace",
							},
							"template_repo": {
								"default":     "terraform-template",
								"description": "the name of the template repository",
							},
							"terraform_version": {
								"description": "The version of Terraform CLI,eg, 1.0.7",
							},
							"tfc_oauth_token": {
								"description": "TFC/E oauth id",
							},
							"workspace_description": {
								"description": "The description of workspace",
							},
						},
					},
					"source":             "ausmartway/vcs-connected-workspace/tfe",
					"version_constraint": "0.0.2",
				},
			},
			"resources": [
				{
					"address": "tfe_oauth_client.github-a",
					"expressions": {
						"api_url": {
							"constant_value": "https://api.github.com",
						},
						"http_url": {
							"constant_value": "https://github.com",
						},
						"oauth_token": {
							"references": [
								"var.github_personal_token",
							],
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"service_provider": {
							"constant_value": "github",
						},
					},
					"mode":                "managed",
					"name":                "github-a",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_oauth_client",
				},
				{
					"address": "tfe_oauth_client.github-b",
					"expressions": {
						"api_url": {
							"constant_value": "https://api.github.com",
						},
						"http_url": {
							"constant_value": "https://github.com",
						},
						"oauth_token": {
							"references": [
								"var.github_personal_token",
							],
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"service_provider": {
							"constant_value": "github",
						},
					},
					"mode":                "managed",
					"name":                "github-b",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_oauth_client",
				},
				{
					"address": "tfe_oauth_client.gitlab-a",
					"expressions": {
						"api_url": {
							"constant_value": "https://gitlab.com/api/v4",
						},
						"http_url": {
							"constant_value": "https://gitlab.com",
						},
						"oauth_token": {
							"references": [
								"var.gitlab_personal_token",
							],
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"service_provider": {
							"constant_value": "gitlab_hosted",
						},
					},
					"mode":                "managed",
					"name":                "gitlab-a",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_oauth_client",
				},
				{
					"address": "tfe_oauth_client.gitlab-b",
					"expressions": {
						"api_url": {
							"constant_value": "https://gitlab.com/api/v4",
						},
						"http_url": {
							"constant_value": "https://gitlab.com",
						},
						"oauth_token": {
							"references": [
								"var.gitlab_personal_token",
							],
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"service_provider": {
							"constant_value": "gitlab_hosted",
						},
					},
					"mode":                "managed",
					"name":                "gitlab-b",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_oauth_client",
				},
				{
					"address": "tfe_run_trigger.auto_trigger_tfc-credential-injector",
					"expressions": {
						"sourceable_id": {
							"references": [
								"tfe_workspace.tfc-config-as-code.id",
								"tfe_workspace.tfc-config-as-code",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.tfc-credential-injector.id",
								"tfe_workspace.tfc-credential-injector",
							],
						},
					},
					"mode":                "managed",
					"name":                "auto_trigger_tfc-credential-injector",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_run_trigger",
				},
				{
					"address": "tfe_run_trigger.auto_trigger_tfc-notification-configurator",
					"expressions": {
						"sourceable_id": {
							"references": [
								"tfe_workspace.tfc-config-as-code.id",
								"tfe_workspace.tfc-config-as-code",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.tfc-notification-configurator.id",
								"tfe_workspace.tfc-notification-configurator",
							],
						},
					},
					"mode":                "managed",
					"name":                "auto_trigger_tfc-notification-configurator",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_run_trigger",
				},
				{
					"address": "tfe_run_trigger.auto_trigger_tfc-policy-attacher",
					"expressions": {
						"sourceable_id": {
							"references": [
								"tfe_workspace.tfc-config-as-code.id",
								"tfe_workspace.tfc-config-as-code",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.tfc-policyset-attacher.id",
								"tfe_workspace.tfc-policyset-attacher",
							],
						},
					},
					"mode":                "managed",
					"name":                "auto_trigger_tfc-policy-attacher",
					"provider_config_key": "tfe",
					"schema_version":      0,
					"type":                "tfe_run_trigger",
				},
				{
					"address": "tfe_variable.aws-lambda-example-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.aws-lambda-example.id",
								"tfe_workspace.aws-lambda-example",
							],
						},
					},
					"mode":                "managed",
					"name":                "aws-lambda-example-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.aws-s3-demo-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.aws-s3-demo.id",
								"tfe_workspace.aws-s3-demo",
							],
						},
					},
					"mode":                "managed",
					"name":                "aws-s3-demo-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.aws-shared-infra-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.aws-shared-infra.id",
								"tfe_workspace.aws-shared-infra",
							],
						},
					},
					"mode":                "managed",
					"name":                "aws-shared-infra-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.multi-env-provisioning-example-0-test-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.multi-env-provisioning-example-0-test.id",
								"tfe_workspace.multi-env-provisioning-example-0-test",
							],
						},
					},
					"mode":                "managed",
					"name":                "multi-env-provisioning-example-0-test-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.multi-env-provisioning-example-1-staging-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.multi-env-provisioning-example-1-staging.id",
								"tfe_workspace.multi-env-provisioning-example-1-staging",
							],
						},
					},
					"mode":                "managed",
					"name":                "multi-env-provisioning-example-1-staging-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.multi-env-provisioning-example-2-prod-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.multi-env-provisioning-example-2-prod.id",
								"tfe_workspace.multi-env-provisioning-example-2-prod",
							],
						},
					},
					"mode":                "managed",
					"name":                "multi-env-provisioning-example-2-prod-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.multicloud-dns-management-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.multicloud-dns-management.id",
								"tfe_workspace.multicloud-dns-management",
							],
						},
					},
					"mode":                "managed",
					"name":                "multicloud-dns-management-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.terraform-aws-vault-demo-aws_region",
					"expressions": {
						"category": {
							"constant_value": "env",
						},
						"description": {
							"constant_value": "AWS REGION",
						},
						"key": {
							"constant_value": "AWS_REGION",
						},
						"value": {
							"references": [
								"var.aws_default_region",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.terraform-aws-vault-demo.id",
								"tfe_workspace.terraform-aws-vault-demo",
							],
						},
					},
					"mode":                "managed",
					"name":                "terraform-aws-vault-demo-aws_region",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.tfc-policyset-attacher-orgnization",
					"expressions": {
						"category": {
							"constant_value": "terraform",
						},
						"description": {
							"constant_value": "TFC/E organization",
						},
						"key": {
							"constant_value": "organization",
						},
						"value": {
							"references": [
								"var.organization",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.tfc-policyset-attacher.id",
								"tfe_workspace.tfc-policyset-attacher",
							],
						},
					},
					"mode":                "managed",
					"name":                "tfc-policyset-attacher-orgnization",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id",
					"expressions": {
						"category": {
							"constant_value": "terraform",
						},
						"description": {
							"constant_value": "VCS connection oauth token id",
						},
						"key": {
							"constant_value": "tfc_oauth_token_id",
						},
						"value": {
							"references": [
								"local.tfc_oauth_token",
							],
						},
						"workspace_id": {
							"references": [
								"tfe_workspace.tfc-policyset-attacher.id",
								"tfe_workspace.tfc-policyset-attacher",
							],
						},
					},
					"mode":                "managed",
					"name":                "tfc-policyset-attacher-tfc_oauth_token_id",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_variable",
				},
				{
					"address": "tfe_workspace.aws-lambda-example",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "Demo workspace for deploying lambda functions.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "aws-lambda-example",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"aws",
								"customerfacing",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/aws-lambda-demo",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "aws-lambda-example",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.aws-s3-demo",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "aws-s3-demo",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"aws",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/aws-s3-demo",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "aws-s3-demo",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.aws-shared-infra",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "My core aws infrustructure that are shared by other workspaces.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "aws-shared-infra",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"aws",
								"internal",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/terraform-aws-core",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "aws-shared-infra",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.azure-shared-infra",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "Core azure infra",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "azure-shared-infra",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"azure",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/azure-shared-infra",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "azure-shared-infra",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.azure-simple-demo",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A simple demo of deploying Azure resources.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "azure-simple-demo",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"azure",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/azure-basic-demo",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "azure-simple-demo",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.gcp-playground",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A simple demo of deploying gcp resources.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": false,
						},
						"name": {
							"constant_value": "gcp-playground",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"gcp",
								"autoinject",
								"internal",
								"testing",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/gcp-playground",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "gcp-playground",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.multi-env-provisioning-example-0-test",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A demo showing how to manage multiple enviroments using one set of terraform code.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "multi-env-provisioning-example-0-test",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"aws",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/multi-env-provisioning-example",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "multi-env-provisioning-example-0-test",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.multi-env-provisioning-example-1-staging",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A demo showing how to manage multiple enviroments using one set of terraform code.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "multi-env-provisioning-example-1-staging",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"aws",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/multi-env-provisioning-example",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "multi-env-provisioning-example-1-staging",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.multi-env-provisioning-example-2-prod",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A demo showing how to manage multiple enviroments using one set of terraform code.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "multi-env-provisioning-example-2-prod",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"aws",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/multi-env-provisioning-example",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "multi-env-provisioning-example-2-prod",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.multicloud-dns-management",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "Manages my aws/azure/gcp DNS records using aws route53.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "multicloud-dns-management",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"internal",
								"aws",
								"gcp",
								"azure",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "0.12.31",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/dns-multicloud",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "multicloud-dns-management",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.terraform-aws-vault-demo",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A workspace that standup a demo vault instance.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": true,
						},
						"name": {
							"constant_value": "terraform-aws-vault-demo",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"internal",
								"aws",
								"vault",
								"autoinject",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/terraform-aws-vault-demo",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "terraform-aws-vault-demo",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.tfc-config-as-code",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": true,
						},
						"global_remote_state": {
							"constant_value": false,
						},
						"name": {
							"constant_value": "tfc-config-as-code",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"remote_state_consumer_ids": {
							"constant_value": [],
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"tfc",
								"internal",
								"management",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/tfc-config-as-code",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "tfc-config-as-code",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.tfc-credential-injector",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": false,
						},
						"name": {
							"constant_value": "tfc-credential-injector",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": true,
						},
						"remote_state_consumer_ids": {
							"constant_value": [],
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"internal",
								"tfc",
								"management",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/tfc-credential-injector",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "tfc-credential-injector",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.tfc-notification-configurator",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A workspace that will configure TFC/E notifications based on tag automaticly.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": false,
						},
						"name": {
							"constant_value": "tfc-notification-configurator",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": true,
						},
						"remote_state_consumer_ids": {
							"constant_value": [],
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"internal",
								"tfc",
								"management",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/tfc-notification-configurator",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "tfc-notification-configurator",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.tfc-policyset-attacher",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A workspace that will configure TFC/E notifications based on tag automaticly.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": false,
						},
						"name": {
							"constant_value": "tfc-policyset-attacher",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": true,
						},
						"remote_state_consumer_ids": {
							"constant_value": [],
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"internal",
								"tfc",
								"management",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/tfc-policyset-attacher",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "tfc-policyset-attacher",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.vault-config-as-code",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"constant_value": "A workspace that's used to manage my own Vault's configuration as code.",
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": false,
						},
						"name": {
							"constant_value": "vault-config-as-code",
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"remote_state_consumer_ids": {
							"constant_value": [],
						},
						"speculative_enabled": {
							"constant_value": true,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"constant_value": [
								"customerfacing",
								"vault",
								"aws",
							],
						},
						"terraform_version": {
							"constant_value": "1.0.7",
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
						"vcs_repo": [
							{
								"identifier": {
									"constant_value": "ausmartway/vault-config-as-code",
								},
								"ingress_submodules": {
									"constant_value": false,
								},
								"oauth_token_id": {
									"references": [
										"local.tfc_oauth_token",
									],
								},
							},
						],
					},
					"mode":                "managed",
					"name":                "vault-config-as-code",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
				{
					"address": "tfe_workspace.workspace",
					"expressions": {
						"allow_destroy_plan": {
							"constant_value": true,
						},
						"auto_apply": {
							"constant_value": true,
						},
						"description": {
							"references": [
								"each.value.name",
								"each.value",
							],
						},
						"execution_mode": {
							"constant_value": "remote",
						},
						"file_triggers_enabled": {
							"constant_value": false,
						},
						"global_remote_state": {
							"constant_value": false,
						},
						"name": {
							"references": [
								"each.value.name",
								"each.value",
							],
						},
						"organization": {
							"references": [
								"var.organization",
							],
						},
						"queue_all_runs": {
							"constant_value": false,
						},
						"remote_state_consumer_ids": {
							"constant_value": [],
						},
						"speculative_enabled": {
							"constant_value": false,
						},
						"structured_run_output_enabled": {
							"constant_value": true,
						},
						"tag_names": {
							"references": [
								"each.value.tags",
								"each.value",
							],
						},
						"terraform_version": {
							"references": [
								"each.value.version",
								"each.value",
							],
						},
						"trigger_prefixes": {
							"constant_value": [],
						},
					},
					"for_each_expression": {
						"references": [
							"local.inputworkspacemap",
						],
					},
					"mode":                "managed",
					"name":                "workspace",
					"provider_config_key": "tfe",
					"schema_version":      1,
					"type":                "tfe_workspace",
				},
			],
			"variables": {
				"aws_default_region": {
					"default":     "ap-southeast-2",
					"description": "the default AWS_REGION",
				},
				"github_personal_token": {
					"description": "The github.com personal token",
					"sensitive":   true,
				},
				"gitlab_personal_token": {
					"description": "The gitlab.com personal token",
					"sensitive":   true,
				},
				"organization": {
					"description": "Name of TFC/E organization",
				},
				"tfe_token": {
					"description": "TFC/E token that has permission to manage workspace/policy-set/variable/notification/tags, note that orgnization/team token are not enough.",
					"sensitive":   true,
				},
			},
		},
	},
	"format_version": "0.2",
	"planned_values": {
		"root_module": {
			"child_modules": [
				{
					"address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
					"resources": [
						{
							"address":        "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].github_repository.repo",
							"mode":           "managed",
							"name":           "repo",
							"provider_name":  "registry.terraform.io/integrations/github",
							"schema_version": 0,
							"sensitive_values": {
								"pages": [],
								"template": [
									{},
								],
								"topics": [],
							},
							"type": "github_repository",
							"values": {
								"allow_merge_commit":     true,
								"allow_rebase_merge":     true,
								"allow_squash_merge":     true,
								"archive_on_destroy":     null,
								"archived":               false,
								"auto_init":              null,
								"default_branch":         "main",
								"delete_branch_on_merge": false,
								"description":            "Github repository for TFC workspace vcs-sentinel-dev",
								"etag":                   "W/\"4906460e2d262a9179da1e0094c2b56b9b60756dbb07474e399f0179aa015762\"",
								"full_name":              "ausmartway/vcs-sentinel-dev",
								"git_clone_url":          "git://github.com/ausmartway/vcs-sentinel-dev.git",
								"gitignore_template":     null,
								"has_downloads":          false,
								"has_issues":             false,
								"has_projects":           false,
								"has_wiki":               false,
								"homepage_url":           "",
								"html_url":               "https://github.com/ausmartway/vcs-sentinel-dev",
								"http_clone_url":         "https://github.com/ausmartway/vcs-sentinel-dev.git",
								"id":                     "vcs-sentinel-dev",
								"is_template":            false,
								"license_template":       null,
								"name":                   "vcs-sentinel-dev",
								"node_id":                "R_kgDOGGExbA",
								"pages":                  [],
								"private":                true,
								"repo_id":                409022828,
								"ssh_clone_url":          "git@github.com:ausmartway/vcs-sentinel-dev.git",
								"svn_url":                "https://github.com/ausmartway/vcs-sentinel-dev",
								"template": [
									{
										"owner":      "ausmartway",
										"repository": "terraform-template",
									},
								],
								"topics":               [],
								"visibility":           "private",
								"vulnerability_alerts": false,
							},
						},
						{
							"address":        "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].tfe_workspace.workspace",
							"mode":           "managed",
							"name":           "workspace",
							"provider_name":  "registry.terraform.io/hashicorp/tfe",
							"schema_version": 1,
							"sensitive_values": {
								"remote_state_consumer_ids": [],
								"tag_names": [
									false,
									false,
									false,
								],
								"trigger_prefixes": [],
								"vcs_repo": [
									{},
								],
							},
							"type": "tfe_workspace",
							"values": {
								"agent_pool_id":         "",
								"allow_destroy_plan":    true,
								"auto_apply":            true,
								"description":           "this is a workspace for developing sentinel",
								"execution_mode":        "remote",
								"file_triggers_enabled": false,
								"global_remote_state":   false,
								"id":                            "ws-9Vm5uBAKTt21Wfao",
								"name":                          "vcs-sentinel-dev",
								"operations":                    true,
								"organization":                  "yulei",
								"queue_all_runs":                true,
								"remote_state_consumer_ids":     [],
								"speculative_enabled":           true,
								"ssh_key_id":                    "",
								"structured_run_output_enabled": true,
								"tag_names": [
									"internal",
									"sentinel",
									"tfc",
								],
								"terraform_version": "1.0.7",
								"trigger_prefixes":  [],
								"vcs_repo": [
									{
										"branch":             "",
										"identifier":         "ausmartway/vcs-sentinel-dev",
										"ingress_submodules": false,
										"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
									},
								],
								"working_directory": "",
							},
						},
					],
				},
				{
					"address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"]",
					"resources": [
						{
							"address":        "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].github_repository.repo",
							"mode":           "managed",
							"name":           "repo",
							"provider_name":  "registry.terraform.io/integrations/github",
							"schema_version": 0,
							"sensitive_values": {
								"pages": [],
								"template": [
									{},
								],
							},
							"type": "github_repository",
							"values": {
								"allow_merge_commit":     true,
								"allow_rebase_merge":     true,
								"allow_squash_merge":     true,
								"archive_on_destroy":     null,
								"archived":               false,
								"auto_init":              null,
								"delete_branch_on_merge": false,
								"description":            "Github repository for TFC workspace vcs-sentinel-mock-generator",
								"gitignore_template":     null,
								"has_downloads":          null,
								"has_issues":             null,
								"has_projects":           null,
								"has_wiki":               null,
								"homepage_url":           null,
								"is_template":            null,
								"license_template":       null,
								"name":                   "vcs-sentinel-mock-generator",
								"pages":                  [],
								"template": [
									{
										"owner":      "ausmartway",
										"repository": "terraform-template",
									},
								],
								"topics":               null,
								"visibility":           "private",
								"vulnerability_alerts": null,
							},
						},
						{
							"address":        "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].tfe_workspace.workspace",
							"mode":           "managed",
							"name":           "workspace",
							"provider_name":  "registry.terraform.io/hashicorp/tfe",
							"schema_version": 1,
							"sensitive_values": {
								"tag_names": [
									false,
									false,
									false,
									false,
								],
								"trigger_prefixes": [],
								"vcs_repo": [
									{},
								],
							},
							"type": "tfe_workspace",
							"values": {
								"agent_pool_id":                 null,
								"allow_destroy_plan":            true,
								"auto_apply":                    true,
								"description":                   "this is a test workspace",
								"execution_mode":                "remote",
								"file_triggers_enabled":         false,
								"global_remote_state":           false,
								"name":                          "vcs-sentinel-mock-generator",
								"organization":                  "yulei",
								"queue_all_runs":                true,
								"remote_state_consumer_ids":     null,
								"speculative_enabled":           true,
								"ssh_key_id":                    null,
								"structured_run_output_enabled": true,
								"tag_names": [
									"autoinject",
									"aws",
									"azure",
									"badmock",
								],
								"terraform_version": "1.0.7",
								"trigger_prefixes":  [],
								"vcs_repo": [
									{
										"branch":             null,
										"ingress_submodules": false,
										"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
									},
								],
								"working_directory": null,
							},
						},
					],
				},
				{
					"address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
					"resources": [
						{
							"address":        "module.vcs-connected-workspace[\"vcs-workspaceone\"].github_repository.repo",
							"mode":           "managed",
							"name":           "repo",
							"provider_name":  "registry.terraform.io/integrations/github",
							"schema_version": 0,
							"sensitive_values": {
								"pages": [],
								"template": [
									{},
								],
							},
							"type": "github_repository",
							"values": {
								"allow_merge_commit":     true,
								"allow_rebase_merge":     true,
								"allow_squash_merge":     true,
								"archive_on_destroy":     null,
								"archived":               false,
								"auto_init":              null,
								"default_branch":         "main",
								"delete_branch_on_merge": false,
								"description":            "Github repository for TFC workspace vcs-workspaceone",
								"etag":                   "W/\"42fb55d146e5ed328e184def6d23d551c3bfc6bf7d844b6a4d8ed96efefc0679\"",
								"full_name":              "ausmartway/vcs-workspaceone",
								"git_clone_url":          "git://github.com/ausmartway/vcs-workspaceone.git",
								"gitignore_template":     null,
								"has_downloads":          false,
								"has_issues":             false,
								"has_projects":           false,
								"has_wiki":               false,
								"homepage_url":           "",
								"html_url":               "https://github.com/ausmartway/vcs-workspaceone",
								"http_clone_url":         "https://github.com/ausmartway/vcs-workspaceone.git",
								"id":                     "vcs-workspaceone",
								"is_template":            false,
								"license_template":       null,
								"name":                   "vcs-workspaceone",
								"node_id":                "R_kgDOGFyRlg",
								"pages":                  [],
								"private":                true,
								"repo_id":                408719766,
								"ssh_clone_url":          "git@github.com:ausmartway/vcs-workspaceone.git",
								"svn_url":                "https://github.com/ausmartway/vcs-workspaceone",
								"template": [
									{
										"owner":      "ausmartway",
										"repository": "terraform-template",
									},
								],
								"topics":               null,
								"visibility":           "private",
								"vulnerability_alerts": false,
							},
						},
						{
							"address":        "module.vcs-connected-workspace[\"vcs-workspaceone\"].tfe_workspace.workspace",
							"mode":           "managed",
							"name":           "workspace",
							"provider_name":  "registry.terraform.io/hashicorp/tfe",
							"schema_version": 1,
							"sensitive_values": {
								"remote_state_consumer_ids": [],
								"tag_names": [
									false,
									false,
									false,
								],
								"trigger_prefixes": [],
								"vcs_repo": [
									{},
								],
							},
							"type": "tfe_workspace",
							"values": {
								"agent_pool_id":         "",
								"allow_destroy_plan":    true,
								"auto_apply":            true,
								"description":           "this is a test workspace",
								"execution_mode":        "remote",
								"file_triggers_enabled": false,
								"global_remote_state":   false,
								"id":                            "ws-21PADxvPVSoPhhY4",
								"name":                          "vcs-workspaceone",
								"operations":                    true,
								"organization":                  "yulei",
								"queue_all_runs":                true,
								"remote_state_consumer_ids":     [],
								"speculative_enabled":           true,
								"ssh_key_id":                    "",
								"structured_run_output_enabled": true,
								"tag_names": [
									"autoinject",
									"aws",
									"azure",
								],
								"terraform_version": "1.0.7",
								"trigger_prefixes":  [],
								"vcs_repo": [
									{
										"branch":             "",
										"identifier":         "ausmartway/vcs-workspaceone",
										"ingress_submodules": false,
										"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
									},
								],
								"working_directory": "",
							},
						},
					],
				},
			],
			"resources": [
				{
					"address":        "tfe_oauth_client.github-a",
					"mode":           "managed",
					"name":           "github-a",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 0,
					"sensitive_values": {
						"oauth_token": true,
					},
					"type": "tfe_oauth_client",
					"values": {
						"api_url":          "https://api.github.com",
						"http_url":         "https://github.com",
						"id":               "oc-t3GmujcL2wrtPtVw",
						"oauth_token":      "REDACTED_SENSITIVE",
						"oauth_token_id":   "ot-ECRp7Q8bau6wDuba",
						"organization":     "yulei",
						"private_key":      null,
						"service_provider": "github",
					},
				},
				{
					"address":        "tfe_oauth_client.github-b",
					"mode":           "managed",
					"name":           "github-b",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 0,
					"sensitive_values": {
						"oauth_token": true,
					},
					"type": "tfe_oauth_client",
					"values": {
						"api_url":          "https://api.github.com",
						"http_url":         "https://github.com",
						"id":               "oc-SGAjYbawuMtrsVdi",
						"oauth_token":      "REDACTED_SENSITIVE",
						"oauth_token_id":   "ot-ojKu4mCdGeqTauNo",
						"organization":     "yulei",
						"private_key":      null,
						"service_provider": "github",
					},
				},
				{
					"address":        "tfe_oauth_client.gitlab-a",
					"mode":           "managed",
					"name":           "gitlab-a",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 0,
					"sensitive_values": {
						"oauth_token": true,
					},
					"type": "tfe_oauth_client",
					"values": {
						"api_url":          "https://gitlab.com/api/v4",
						"http_url":         "https://gitlab.com",
						"id":               "oc-aYUXRhfWXVSavhTC",
						"oauth_token":      "REDACTED_SENSITIVE",
						"oauth_token_id":   "ot-19AYi7if8fjhffFP",
						"organization":     "yulei",
						"private_key":      null,
						"service_provider": "gitlab_hosted",
					},
				},
				{
					"address":        "tfe_oauth_client.gitlab-b",
					"mode":           "managed",
					"name":           "gitlab-b",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 0,
					"sensitive_values": {
						"oauth_token": true,
					},
					"type": "tfe_oauth_client",
					"values": {
						"api_url":          "https://gitlab.com/api/v4",
						"http_url":         "https://gitlab.com",
						"id":               "oc-fvJx34NHKZqH7PaR",
						"oauth_token":      "REDACTED_SENSITIVE",
						"oauth_token_id":   "ot-w2DuTSTfyhqDm3tS",
						"organization":     "yulei",
						"private_key":      null,
						"service_provider": "gitlab_hosted",
					},
				},
				{
					"address":          "tfe_run_trigger.auto_trigger_tfc-credential-injector",
					"mode":             "managed",
					"name":             "auto_trigger_tfc-credential-injector",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   0,
					"sensitive_values": {},
					"type":             "tfe_run_trigger",
					"values": {
						"id":            "rt-CjdbnGnVzB2WMTne",
						"sourceable_id": "ws-seQ28ryqi1xfKRr1",
						"workspace_id":  "ws-AqoXHpbhwdLKroVw",
					},
				},
				{
					"address":          "tfe_run_trigger.auto_trigger_tfc-notification-configurator",
					"mode":             "managed",
					"name":             "auto_trigger_tfc-notification-configurator",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   0,
					"sensitive_values": {},
					"type":             "tfe_run_trigger",
					"values": {
						"id":            "rt-bCSKhTJa5UGZZA3X",
						"sourceable_id": "ws-seQ28ryqi1xfKRr1",
						"workspace_id":  "ws-NnA88UfvetLFM9JX",
					},
				},
				{
					"address":          "tfe_run_trigger.auto_trigger_tfc-policy-attacher",
					"mode":             "managed",
					"name":             "auto_trigger_tfc-policy-attacher",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   0,
					"sensitive_values": {},
					"type":             "tfe_run_trigger",
					"values": {
						"id":            "rt-b3RZ8Ce4MbGPNykd",
						"sourceable_id": "ws-seQ28ryqi1xfKRr1",
						"workspace_id":  "ws-Hqt6WoDvG4VjJRWV",
					},
				},
				{
					"address":          "tfe_variable.aws-lambda-example-aws_region",
					"mode":             "managed",
					"name":             "aws-lambda-example-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-kKRoHMpVMj1cajMo",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-s3arZoJTyfvg32YM",
					},
				},
				{
					"address":          "tfe_variable.aws-s3-demo-aws_region",
					"mode":             "managed",
					"name":             "aws-s3-demo-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-o6jsEdkNosgeNLYV",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-fypzJQtNiwEPTsFp",
					},
				},
				{
					"address":          "tfe_variable.aws-shared-infra-aws_region",
					"mode":             "managed",
					"name":             "aws-shared-infra-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-6LxWKub7QWq4APJT",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-MiQBojMDAVpxnSEN",
					},
				},
				{
					"address":          "tfe_variable.multi-env-provisioning-example-0-test-aws_region",
					"mode":             "managed",
					"name":             "multi-env-provisioning-example-0-test-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-C7h9fWokXE34NAic",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-RW99m8Qucacx6t2P",
					},
				},
				{
					"address":          "tfe_variable.multi-env-provisioning-example-1-staging-aws_region",
					"mode":             "managed",
					"name":             "multi-env-provisioning-example-1-staging-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-jR1g6aC7dFwQM89q",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-tQj6j9SPMRLAXrmF",
					},
				},
				{
					"address":          "tfe_variable.multi-env-provisioning-example-2-prod-aws_region",
					"mode":             "managed",
					"name":             "multi-env-provisioning-example-2-prod-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-MR6MZi14nrJU87pQ",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-QuU3xTMss2VAcRHy",
					},
				},
				{
					"address":          "tfe_variable.multicloud-dns-management-aws_region",
					"mode":             "managed",
					"name":             "multicloud-dns-management-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-jhAUNhkdqDev2izC",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-ZedC2mWXBZu9paho",
					},
				},
				{
					"address":          "tfe_variable.terraform-aws-vault-demo-aws_region",
					"mode":             "managed",
					"name":             "terraform-aws-vault-demo-aws_region",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "env",
						"description":  "AWS REGION",
						"hcl":          false,
						"id":           "var-VVTfpnMZNQUgNrtY",
						"key":          "AWS_REGION",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-YGA4SmRLBbDv1jkP",
					},
				},
				{
					"address":          "tfe_variable.tfc-policyset-attacher-orgnization",
					"mode":             "managed",
					"name":             "tfc-policyset-attacher-orgnization",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "terraform",
						"description":  "TFC/E organization",
						"hcl":          false,
						"id":           "var-LkBpeoQMWtBdwKiw",
						"key":          "organization",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
					},
				},
				{
					"address":          "tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id",
					"mode":             "managed",
					"name":             "tfc-policyset-attacher-tfc_oauth_token_id",
					"provider_name":    "registry.terraform.io/hashicorp/tfe",
					"schema_version":   1,
					"sensitive_values": {},
					"type":             "tfe_variable",
					"values": {
						"category":     "terraform",
						"description":  "VCS connection oauth token id",
						"hcl":          false,
						"id":           "var-eq5XaDFH9rYnvKhS",
						"key":          "tfc_oauth_token_id",
						"sensitive":    false,
						"value":        "REDACTED_SENSITIVE",
						"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
					},
				},
				{
					"address":        "tfe_workspace.aws-lambda-example",
					"mode":           "managed",
					"name":           "aws-lambda-example",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "Demo workspace for deploying lambda functions.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-s3arZoJTyfvg32YM",
						"name":                          "aws-lambda-example",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"customerfacing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/aws-lambda-demo",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.aws-s3-demo",
					"mode":           "managed",
					"name":           "aws-s3-demo",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-fypzJQtNiwEPTsFp",
						"name":                          "aws-s3-demo",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"customerfacing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/aws-s3-demo",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.aws-shared-infra",
					"mode":           "managed",
					"name":           "aws-shared-infra",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "My core aws infrustructure that are shared by other workspaces.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-MiQBojMDAVpxnSEN",
						"name":                          "aws-shared-infra",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"internal",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/terraform-aws-core",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.azure-shared-infra",
					"mode":           "managed",
					"name":           "azure-shared-infra",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "Core azure infra",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-1udCpTYjSbHKAztQ",
						"name":                          "azure-shared-infra",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"azure",
							"customerfacing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/azure-shared-infra",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.azure-simple-demo",
					"mode":           "managed",
					"name":           "azure-simple-demo",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A simple demo of deploying Azure resources.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-8eq1qbSakTSYn1G1",
						"name":                          "azure-simple-demo",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"azure",
							"customerfacing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/azure-basic-demo",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.gcp-playground",
					"mode":           "managed",
					"name":           "gcp-playground",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"remote_state_consumer_ids": [],
						"tag_names": [
							false,
							false,
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A simple demo of deploying gcp resources.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   false,
						"id":                            "ws-u6uJ91U3VSWVv8R9",
						"name":                          "gcp-playground",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     [],
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"customerfacing",
							"gcp",
							"internal",
							"testing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/gcp-playground",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.multi-env-provisioning-example-0-test",
					"mode":           "managed",
					"name":           "multi-env-provisioning-example-0-test",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-RW99m8Qucacx6t2P",
						"name":                          "multi-env-provisioning-example-0-test",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"customerfacing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/multi-env-provisioning-example",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.multi-env-provisioning-example-1-staging",
					"mode":           "managed",
					"name":           "multi-env-provisioning-example-1-staging",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-tQj6j9SPMRLAXrmF",
						"name":                          "multi-env-provisioning-example-1-staging",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"customerfacing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/multi-env-provisioning-example",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.multi-env-provisioning-example-2-prod",
					"mode":           "managed",
					"name":           "multi-env-provisioning-example-2-prod",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-QuU3xTMss2VAcRHy",
						"name":                          "multi-env-provisioning-example-2-prod",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"customerfacing",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/multi-env-provisioning-example",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.multicloud-dns-management",
					"mode":           "managed",
					"name":           "multicloud-dns-management",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "Manages my aws/azure/gcp DNS records using aws route53.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-ZedC2mWXBZu9paho",
						"name":                          "multicloud-dns-management",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"azure",
							"gcp",
							"internal",
						],
						"terraform_version": "0.12.31",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/dns-multicloud",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.terraform-aws-vault-demo",
					"mode":           "managed",
					"name":           "terraform-aws-vault-demo",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"tag_names": [
							false,
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A workspace that standup a demo vault instance.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   true,
						"id":                            "ws-YGA4SmRLBbDv1jkP",
						"name":                          "terraform-aws-vault-demo",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     null,
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"autoinject",
							"aws",
							"internal",
							"vault",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/terraform-aws-vault-demo",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.tfc-config-as-code",
					"mode":           "managed",
					"name":           "tfc-config-as-code",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"remote_state_consumer_ids": [],
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
						"execution_mode":        "remote",
						"file_triggers_enabled": true,
						"global_remote_state":   false,
						"id":                            "ws-seQ28ryqi1xfKRr1",
						"name":                          "tfc-config-as-code",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     [],
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"internal",
							"management",
							"tfc",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/tfc-config-as-code",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.tfc-credential-injector",
					"mode":           "managed",
					"name":           "tfc-credential-injector",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"remote_state_consumer_ids": [],
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   false,
						"id":                            "ws-AqoXHpbhwdLKroVw",
						"name":                          "tfc-credential-injector",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                true,
						"remote_state_consumer_ids":     [],
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"internal",
							"management",
							"tfc",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/tfc-credential-injector",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.tfc-notification-configurator",
					"mode":           "managed",
					"name":           "tfc-notification-configurator",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"remote_state_consumer_ids": [],
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   false,
						"id":                            "ws-NnA88UfvetLFM9JX",
						"name":                          "tfc-notification-configurator",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                true,
						"remote_state_consumer_ids":     [],
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"internal",
							"management",
							"tfc",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/tfc-notification-configurator",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.tfc-policyset-attacher",
					"mode":           "managed",
					"name":           "tfc-policyset-attacher",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"remote_state_consumer_ids": [],
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   false,
						"id":                            "ws-Hqt6WoDvG4VjJRWV",
						"name":                          "tfc-policyset-attacher",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                true,
						"remote_state_consumer_ids":     [],
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"internal",
							"management",
							"tfc",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/tfc-policyset-attacher",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
				{
					"address":        "tfe_workspace.vault-config-as-code",
					"mode":           "managed",
					"name":           "vault-config-as-code",
					"provider_name":  "registry.terraform.io/hashicorp/tfe",
					"schema_version": 1,
					"sensitive_values": {
						"remote_state_consumer_ids": [],
						"tag_names": [
							false,
							false,
							false,
						],
						"trigger_prefixes": [],
						"vcs_repo": [
							{},
						],
					},
					"type": "tfe_workspace",
					"values": {
						"agent_pool_id":         "",
						"allow_destroy_plan":    true,
						"auto_apply":            true,
						"description":           "A workspace that's used to manage my own Vault's configuration as code.",
						"execution_mode":        "remote",
						"file_triggers_enabled": false,
						"global_remote_state":   false,
						"id":                            "ws-a7NAPAZ1c38P8u4U",
						"name":                          "vault-config-as-code",
						"operations":                    true,
						"organization":                  "yulei",
						"queue_all_runs":                false,
						"remote_state_consumer_ids":     [],
						"speculative_enabled":           true,
						"ssh_key_id":                    "",
						"structured_run_output_enabled": true,
						"tag_names": [
							"aws",
							"customerfacing",
							"vault",
						],
						"terraform_version": "1.0.7",
						"trigger_prefixes":  [],
						"vcs_repo": [
							{
								"branch":             "",
								"identifier":         "ausmartway/vault-config-as-code",
								"ingress_submodules": false,
								"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
							},
						],
						"working_directory": "",
					},
				},
			],
		},
	},
	"prior_state": {
		"format_version":    "0.2",
		"terraform_version": "1.0.7",
		"values": {
			"root_module": {
				"child_modules": [
					{
						"address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
						"resources": [
							{
								"address":        "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].github_repository.repo",
								"mode":           "managed",
								"name":           "repo",
								"provider_name":  "registry.terraform.io/integrations/github",
								"schema_version": 0,
								"sensitive_values": {
									"pages": [],
									"template": [
										{},
									],
									"topics": [],
								},
								"type": "github_repository",
								"values": {
									"allow_merge_commit":     true,
									"allow_rebase_merge":     true,
									"allow_squash_merge":     true,
									"archive_on_destroy":     null,
									"archived":               false,
									"auto_init":              null,
									"default_branch":         "main",
									"delete_branch_on_merge": false,
									"description":            "Github repository for TFC workspace vcs-sentinel-dev",
									"etag":                   "W/\"4906460e2d262a9179da1e0094c2b56b9b60756dbb07474e399f0179aa015762\"",
									"full_name":              "ausmartway/vcs-sentinel-dev",
									"git_clone_url":          "git://github.com/ausmartway/vcs-sentinel-dev.git",
									"gitignore_template":     null,
									"has_downloads":          false,
									"has_issues":             false,
									"has_projects":           false,
									"has_wiki":               false,
									"homepage_url":           "",
									"html_url":               "https://github.com/ausmartway/vcs-sentinel-dev",
									"http_clone_url":         "https://github.com/ausmartway/vcs-sentinel-dev.git",
									"id":                     "vcs-sentinel-dev",
									"is_template":            false,
									"license_template":       null,
									"name":                   "vcs-sentinel-dev",
									"node_id":                "R_kgDOGGExbA",
									"pages":                  [],
									"private":                true,
									"repo_id":                409022828,
									"ssh_clone_url":          "git@github.com:ausmartway/vcs-sentinel-dev.git",
									"svn_url":                "https://github.com/ausmartway/vcs-sentinel-dev",
									"template": [
										{
											"owner":      "ausmartway",
											"repository": "terraform-template",
										},
									],
									"topics":               [],
									"visibility":           "private",
									"vulnerability_alerts": false,
								},
							},
							{
								"address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].tfe_workspace.workspace",
								"depends_on": [
									"module.vcs-connected-workspace.github_repository.repo",
									"tfe_oauth_client.github-a",
								],
								"mode":           "managed",
								"name":           "workspace",
								"provider_name":  "registry.terraform.io/hashicorp/tfe",
								"schema_version": 1,
								"sensitive_values": {
									"remote_state_consumer_ids": [],
									"tag_names": [
										false,
										false,
										false,
									],
									"trigger_prefixes": [],
									"vcs_repo": [
										{},
									],
								},
								"type": "tfe_workspace",
								"values": {
									"agent_pool_id":         "",
									"allow_destroy_plan":    true,
									"auto_apply":            true,
									"description":           "this is a workspace for developing sentinel",
									"execution_mode":        "remote",
									"file_triggers_enabled": false,
									"global_remote_state":   false,
									"id":                            "ws-9Vm5uBAKTt21Wfao",
									"name":                          "vcs-sentinel-dev",
									"operations":                    true,
									"organization":                  "yulei",
									"queue_all_runs":                true,
									"remote_state_consumer_ids":     [],
									"speculative_enabled":           true,
									"ssh_key_id":                    "",
									"structured_run_output_enabled": true,
									"tag_names": [
										"internal",
										"sentinel",
										"tfc",
									],
									"terraform_version": "1.0.7",
									"trigger_prefixes":  [],
									"vcs_repo": [
										{
											"branch":             "",
											"identifier":         "ausmartway/vcs-sentinel-dev",
											"ingress_submodules": false,
											"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
										},
									],
									"working_directory": "",
								},
							},
						],
					},
					{
						"address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
						"resources": [
							{
								"address":        "module.vcs-connected-workspace[\"vcs-workspaceone\"].github_repository.repo",
								"mode":           "managed",
								"name":           "repo",
								"provider_name":  "registry.terraform.io/integrations/github",
								"schema_version": 0,
								"sensitive_values": {
									"pages": [],
									"template": [
										{},
									],
								},
								"type": "github_repository",
								"values": {
									"allow_merge_commit":     true,
									"allow_rebase_merge":     true,
									"allow_squash_merge":     true,
									"archive_on_destroy":     null,
									"archived":               false,
									"auto_init":              null,
									"default_branch":         "main",
									"delete_branch_on_merge": false,
									"description":            "Github repository for TFC workspace vcs-workspaceone",
									"etag":                   "W/\"42fb55d146e5ed328e184def6d23d551c3bfc6bf7d844b6a4d8ed96efefc0679\"",
									"full_name":              "ausmartway/vcs-workspaceone",
									"git_clone_url":          "git://github.com/ausmartway/vcs-workspaceone.git",
									"gitignore_template":     null,
									"has_downloads":          false,
									"has_issues":             false,
									"has_projects":           false,
									"has_wiki":               false,
									"homepage_url":           "",
									"html_url":               "https://github.com/ausmartway/vcs-workspaceone",
									"http_clone_url":         "https://github.com/ausmartway/vcs-workspaceone.git",
									"id":                     "vcs-workspaceone",
									"is_template":            false,
									"license_template":       null,
									"name":                   "vcs-workspaceone",
									"node_id":                "R_kgDOGFyRlg",
									"pages":                  [],
									"private":                true,
									"repo_id":                408719766,
									"ssh_clone_url":          "git@github.com:ausmartway/vcs-workspaceone.git",
									"svn_url":                "https://github.com/ausmartway/vcs-workspaceone",
									"template": [
										{
											"owner":      "ausmartway",
											"repository": "terraform-template",
										},
									],
									"topics":               null,
									"visibility":           "private",
									"vulnerability_alerts": false,
								},
							},
							{
								"address": "module.vcs-connected-workspace[\"vcs-workspaceone\"].tfe_workspace.workspace",
								"depends_on": [
									"module.vcs-connected-workspace.github_repository.repo",
									"tfe_oauth_client.github-a",
								],
								"mode":           "managed",
								"name":           "workspace",
								"provider_name":  "registry.terraform.io/hashicorp/tfe",
								"schema_version": 1,
								"sensitive_values": {
									"remote_state_consumer_ids": [],
									"tag_names": [
										false,
										false,
										false,
									],
									"trigger_prefixes": [],
									"vcs_repo": [
										{},
									],
								},
								"type": "tfe_workspace",
								"values": {
									"agent_pool_id":         "",
									"allow_destroy_plan":    true,
									"auto_apply":            true,
									"description":           "this is a test workspace",
									"execution_mode":        "remote",
									"file_triggers_enabled": false,
									"global_remote_state":   false,
									"id":                            "ws-21PADxvPVSoPhhY4",
									"name":                          "vcs-workspaceone",
									"operations":                    true,
									"organization":                  "yulei",
									"queue_all_runs":                true,
									"remote_state_consumer_ids":     [],
									"speculative_enabled":           true,
									"ssh_key_id":                    "",
									"structured_run_output_enabled": true,
									"tag_names": [
										"autoinject",
										"aws",
										"azure",
									],
									"terraform_version": "1.0.7",
									"trigger_prefixes":  [],
									"vcs_repo": [
										{
											"branch":             "",
											"identifier":         "ausmartway/vcs-workspaceone",
											"ingress_submodules": false,
											"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
										},
									],
									"working_directory": "",
								},
							},
						],
					},
				],
				"resources": [
					{
						"address":        "tfe_oauth_client.github-a",
						"mode":           "managed",
						"name":           "github-a",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 0,
						"sensitive_values": {
							"oauth_token": true,
						},
						"type": "tfe_oauth_client",
						"values": {
							"api_url":          "https://api.github.com",
							"http_url":         "https://github.com",
							"id":               "oc-t3GmujcL2wrtPtVw",
							"oauth_token":      "REDACTED_SENSITIVE",
							"oauth_token_id":   "ot-ECRp7Q8bau6wDuba",
							"organization":     "yulei",
							"private_key":      null,
							"service_provider": "github",
						},
					},
					{
						"address":        "tfe_oauth_client.github-b",
						"mode":           "managed",
						"name":           "github-b",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 0,
						"sensitive_values": {
							"oauth_token": true,
						},
						"type": "tfe_oauth_client",
						"values": {
							"api_url":          "https://api.github.com",
							"http_url":         "https://github.com",
							"id":               "oc-SGAjYbawuMtrsVdi",
							"oauth_token":      "REDACTED_SENSITIVE",
							"oauth_token_id":   "ot-ojKu4mCdGeqTauNo",
							"organization":     "yulei",
							"private_key":      null,
							"service_provider": "github",
						},
					},
					{
						"address":        "tfe_oauth_client.gitlab-a",
						"mode":           "managed",
						"name":           "gitlab-a",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 0,
						"sensitive_values": {
							"oauth_token": true,
						},
						"type": "tfe_oauth_client",
						"values": {
							"api_url":          "https://gitlab.com/api/v4",
							"http_url":         "https://gitlab.com",
							"id":               "oc-aYUXRhfWXVSavhTC",
							"oauth_token":      "REDACTED_SENSITIVE",
							"oauth_token_id":   "ot-19AYi7if8fjhffFP",
							"organization":     "yulei",
							"private_key":      null,
							"service_provider": "gitlab_hosted",
						},
					},
					{
						"address":        "tfe_oauth_client.gitlab-b",
						"mode":           "managed",
						"name":           "gitlab-b",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 0,
						"sensitive_values": {
							"oauth_token": true,
						},
						"type": "tfe_oauth_client",
						"values": {
							"api_url":          "https://gitlab.com/api/v4",
							"http_url":         "https://gitlab.com",
							"id":               "oc-fvJx34NHKZqH7PaR",
							"oauth_token":      "REDACTED_SENSITIVE",
							"oauth_token_id":   "ot-w2DuTSTfyhqDm3tS",
							"organization":     "yulei",
							"private_key":      null,
							"service_provider": "gitlab_hosted",
						},
					},
					{
						"address": "tfe_run_trigger.auto_trigger_tfc-credential-injector",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.tfc-config-as-code",
							"tfe_workspace.tfc-credential-injector",
						],
						"mode":             "managed",
						"name":             "auto_trigger_tfc-credential-injector",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   0,
						"sensitive_values": {},
						"type":             "tfe_run_trigger",
						"values": {
							"id":            "rt-CjdbnGnVzB2WMTne",
							"sourceable_id": "ws-seQ28ryqi1xfKRr1",
							"workspace_id":  "ws-AqoXHpbhwdLKroVw",
						},
					},
					{
						"address": "tfe_run_trigger.auto_trigger_tfc-notification-configurator",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.tfc-config-as-code",
							"tfe_workspace.tfc-notification-configurator",
						],
						"mode":             "managed",
						"name":             "auto_trigger_tfc-notification-configurator",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   0,
						"sensitive_values": {},
						"type":             "tfe_run_trigger",
						"values": {
							"id":            "rt-bCSKhTJa5UGZZA3X",
							"sourceable_id": "ws-seQ28ryqi1xfKRr1",
							"workspace_id":  "ws-NnA88UfvetLFM9JX",
						},
					},
					{
						"address": "tfe_run_trigger.auto_trigger_tfc-policy-attacher",
						"depends_on": [
							"tfe_workspace.tfc-policyset-attacher",
							"tfe_oauth_client.github-a",
							"tfe_workspace.tfc-config-as-code",
						],
						"mode":             "managed",
						"name":             "auto_trigger_tfc-policy-attacher",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   0,
						"sensitive_values": {},
						"type":             "tfe_run_trigger",
						"values": {
							"id":            "rt-b3RZ8Ce4MbGPNykd",
							"sourceable_id": "ws-seQ28ryqi1xfKRr1",
							"workspace_id":  "ws-Hqt6WoDvG4VjJRWV",
						},
					},
					{
						"address": "tfe_variable.aws-lambda-example-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.aws-lambda-example",
						],
						"mode":             "managed",
						"name":             "aws-lambda-example-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-kKRoHMpVMj1cajMo",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-s3arZoJTyfvg32YM",
						},
					},
					{
						"address": "tfe_variable.aws-s3-demo-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.aws-s3-demo",
						],
						"mode":             "managed",
						"name":             "aws-s3-demo-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-o6jsEdkNosgeNLYV",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-fypzJQtNiwEPTsFp",
						},
					},
					{
						"address": "tfe_variable.aws-shared-infra-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.aws-shared-infra",
						],
						"mode":             "managed",
						"name":             "aws-shared-infra-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-6LxWKub7QWq4APJT",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-MiQBojMDAVpxnSEN",
						},
					},
					{
						"address": "tfe_variable.multi-env-provisioning-example-0-test-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.multi-env-provisioning-example-0-test",
						],
						"mode":             "managed",
						"name":             "multi-env-provisioning-example-0-test-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-C7h9fWokXE34NAic",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-RW99m8Qucacx6t2P",
						},
					},
					{
						"address": "tfe_variable.multi-env-provisioning-example-1-staging-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.multi-env-provisioning-example-1-staging",
						],
						"mode":             "managed",
						"name":             "multi-env-provisioning-example-1-staging-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-jR1g6aC7dFwQM89q",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-tQj6j9SPMRLAXrmF",
						},
					},
					{
						"address": "tfe_variable.multi-env-provisioning-example-2-prod-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.multi-env-provisioning-example-2-prod",
						],
						"mode":             "managed",
						"name":             "multi-env-provisioning-example-2-prod-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-MR6MZi14nrJU87pQ",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-QuU3xTMss2VAcRHy",
						},
					},
					{
						"address": "tfe_variable.multicloud-dns-management-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.multicloud-dns-management",
						],
						"mode":             "managed",
						"name":             "multicloud-dns-management-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-jhAUNhkdqDev2izC",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-ZedC2mWXBZu9paho",
						},
					},
					{
						"address": "tfe_variable.terraform-aws-vault-demo-aws_region",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.terraform-aws-vault-demo",
						],
						"mode":             "managed",
						"name":             "terraform-aws-vault-demo-aws_region",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "env",
							"description":  "AWS REGION",
							"hcl":          false,
							"id":           "var-VVTfpnMZNQUgNrtY",
							"key":          "AWS_REGION",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-YGA4SmRLBbDv1jkP",
						},
					},
					{
						"address": "tfe_variable.tfc-policyset-attacher-orgnization",
						"depends_on": [
							"tfe_workspace.tfc-policyset-attacher",
							"tfe_oauth_client.github-a",
						],
						"mode":             "managed",
						"name":             "tfc-policyset-attacher-orgnization",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "terraform",
							"description":  "TFC/E organization",
							"hcl":          false,
							"id":           "var-LkBpeoQMWtBdwKiw",
							"key":          "organization",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
						},
					},
					{
						"address": "tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id",
						"depends_on": [
							"tfe_oauth_client.github-a",
							"tfe_workspace.tfc-policyset-attacher",
						],
						"mode":             "managed",
						"name":             "tfc-policyset-attacher-tfc_oauth_token_id",
						"provider_name":    "registry.terraform.io/hashicorp/tfe",
						"schema_version":   1,
						"sensitive_values": {},
						"type":             "tfe_variable",
						"values": {
							"category":     "terraform",
							"description":  "VCS connection oauth token id",
							"hcl":          false,
							"id":           "var-eq5XaDFH9rYnvKhS",
							"key":          "tfc_oauth_token_id",
							"sensitive":    false,
							"value":        "REDACTED_SENSITIVE",
							"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
						},
					},
					{
						"address": "tfe_workspace.aws-lambda-example",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "aws-lambda-example",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "Demo workspace for deploying lambda functions.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-s3arZoJTyfvg32YM",
							"name":                          "aws-lambda-example",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"customerfacing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/aws-lambda-demo",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.aws-s3-demo",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "aws-s3-demo",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-fypzJQtNiwEPTsFp",
							"name":                          "aws-s3-demo",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"customerfacing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/aws-s3-demo",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.aws-shared-infra",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "aws-shared-infra",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "My core aws infrustructure that are shared by other workspaces.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-MiQBojMDAVpxnSEN",
							"name":                          "aws-shared-infra",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"internal",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/terraform-aws-core",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.azure-shared-infra",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "azure-shared-infra",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "Core azure infra",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-1udCpTYjSbHKAztQ",
							"name":                          "azure-shared-infra",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"azure",
								"customerfacing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/azure-shared-infra",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.azure-simple-demo",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "azure-simple-demo",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A simple demo of deploying Azure resources.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-8eq1qbSakTSYn1G1",
							"name":                          "azure-simple-demo",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"azure",
								"customerfacing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/azure-basic-demo",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.gcp-playground",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "gcp-playground",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"remote_state_consumer_ids": [],
							"tag_names": [
								false,
								false,
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A simple demo of deploying gcp resources.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   false,
							"id":                            "ws-u6uJ91U3VSWVv8R9",
							"name":                          "gcp-playground",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     [],
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"customerfacing",
								"gcp",
								"internal",
								"testing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/gcp-playground",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.multi-env-provisioning-example-0-test",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "multi-env-provisioning-example-0-test",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-RW99m8Qucacx6t2P",
							"name":                          "multi-env-provisioning-example-0-test",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"customerfacing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/multi-env-provisioning-example",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.multi-env-provisioning-example-1-staging",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "multi-env-provisioning-example-1-staging",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-tQj6j9SPMRLAXrmF",
							"name":                          "multi-env-provisioning-example-1-staging",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"customerfacing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/multi-env-provisioning-example",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.multi-env-provisioning-example-2-prod",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "multi-env-provisioning-example-2-prod",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-QuU3xTMss2VAcRHy",
							"name":                          "multi-env-provisioning-example-2-prod",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"customerfacing",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/multi-env-provisioning-example",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.multicloud-dns-management",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "multicloud-dns-management",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "Manages my aws/azure/gcp DNS records using aws route53.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-ZedC2mWXBZu9paho",
							"name":                          "multicloud-dns-management",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"azure",
								"gcp",
								"internal",
							],
							"terraform_version": "0.12.31",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/dns-multicloud",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.terraform-aws-vault-demo",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "terraform-aws-vault-demo",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"tag_names": [
								false,
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A workspace that standup a demo vault instance.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   true,
							"id":                            "ws-YGA4SmRLBbDv1jkP",
							"name":                          "terraform-aws-vault-demo",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     null,
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"internal",
								"vault",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/terraform-aws-vault-demo",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.tfc-config-as-code",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "tfc-config-as-code",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"remote_state_consumer_ids": [],
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
							"execution_mode":        "remote",
							"file_triggers_enabled": true,
							"global_remote_state":   false,
							"id":                            "ws-seQ28ryqi1xfKRr1",
							"name":                          "tfc-config-as-code",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     [],
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"internal",
								"management",
								"tfc",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/tfc-config-as-code",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.tfc-credential-injector",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "tfc-credential-injector",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"remote_state_consumer_ids": [],
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   false,
							"id":                            "ws-AqoXHpbhwdLKroVw",
							"name":                          "tfc-credential-injector",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                true,
							"remote_state_consumer_ids":     [],
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"internal",
								"management",
								"tfc",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/tfc-credential-injector",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.tfc-notification-configurator",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "tfc-notification-configurator",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"remote_state_consumer_ids": [],
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   false,
							"id":                            "ws-NnA88UfvetLFM9JX",
							"name":                          "tfc-notification-configurator",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                true,
							"remote_state_consumer_ids":     [],
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"internal",
								"management",
								"tfc",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/tfc-notification-configurator",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.tfc-policyset-attacher",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "tfc-policyset-attacher",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"remote_state_consumer_ids": [],
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   false,
							"id":                            "ws-Hqt6WoDvG4VjJRWV",
							"name":                          "tfc-policyset-attacher",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                true,
							"remote_state_consumer_ids":     [],
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"internal",
								"management",
								"tfc",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/tfc-policyset-attacher",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address": "tfe_workspace.vault-config-as-code",
						"depends_on": [
							"tfe_oauth_client.github-a",
						],
						"mode":           "managed",
						"name":           "vault-config-as-code",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"remote_state_consumer_ids": [],
							"tag_names": [
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo": [
								{},
							],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "A workspace that's used to manage my own Vault's configuration as code.",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   false,
							"id":                            "ws-a7NAPAZ1c38P8u4U",
							"name":                          "vault-config-as-code",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     [],
							"speculative_enabled":           true,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"aws",
								"customerfacing",
								"vault",
							],
							"terraform_version": "1.0.7",
							"trigger_prefixes":  [],
							"vcs_repo": [
								{
									"branch":             "",
									"identifier":         "ausmartway/vault-config-as-code",
									"ingress_submodules": false,
									"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
								},
							],
							"working_directory": "",
						},
					},
					{
						"address":        "tfe_workspace.workspace[\"non-vcs-workspace-example-demo-for-bhp\"]",
						"index":          "non-vcs-workspace-example-demo-for-bhp",
						"mode":           "managed",
						"name":           "workspace",
						"provider_name":  "registry.terraform.io/hashicorp/tfe",
						"schema_version": 1,
						"sensitive_values": {
							"remote_state_consumer_ids": [],
							"tag_names": [
								false,
								false,
								false,
								false,
								false,
								false,
							],
							"trigger_prefixes": [],
							"vcs_repo":         [],
						},
						"type": "tfe_workspace",
						"values": {
							"agent_pool_id":         "",
							"allow_destroy_plan":    true,
							"auto_apply":            true,
							"description":           "non-vcs-workspace-example-demo-for-bhp",
							"execution_mode":        "remote",
							"file_triggers_enabled": false,
							"global_remote_state":   false,
							"id":                            "ws-suocxcRmS6p1cfin",
							"name":                          "non-vcs-workspace-example-demo-for-bhp",
							"operations":                    true,
							"organization":                  "yulei",
							"queue_all_runs":                false,
							"remote_state_consumer_ids":     [],
							"speculative_enabled":           false,
							"ssh_key_id":                    "",
							"structured_run_output_enabled": true,
							"tag_names": [
								"autoinject",
								"aws",
								"azure",
								"bhp",
								"customerfacing",
								"tfc",
							],
							"terraform_version": "1.0.6",
							"trigger_prefixes":  [],
							"vcs_repo":          [],
							"working_directory": "",
						},
					},
				],
			},
		},
	},
	"resource_changes": [
		{
			"address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].github_repository.repo",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"allow_merge_commit":     true,
					"allow_rebase_merge":     true,
					"allow_squash_merge":     true,
					"archive_on_destroy":     null,
					"archived":               false,
					"auto_init":              null,
					"default_branch":         "main",
					"delete_branch_on_merge": false,
					"description":            "Github repository for TFC workspace vcs-sentinel-dev",
					"etag":                   "W/\"4906460e2d262a9179da1e0094c2b56b9b60756dbb07474e399f0179aa015762\"",
					"full_name":              "ausmartway/vcs-sentinel-dev",
					"git_clone_url":          "git://github.com/ausmartway/vcs-sentinel-dev.git",
					"gitignore_template":     null,
					"has_downloads":          false,
					"has_issues":             false,
					"has_projects":           false,
					"has_wiki":               false,
					"homepage_url":           "",
					"html_url":               "https://github.com/ausmartway/vcs-sentinel-dev",
					"http_clone_url":         "https://github.com/ausmartway/vcs-sentinel-dev.git",
					"id":                     "vcs-sentinel-dev",
					"is_template":            false,
					"license_template":       null,
					"name":                   "vcs-sentinel-dev",
					"node_id":                "R_kgDOGGExbA",
					"pages":                  [],
					"private":                true,
					"repo_id":                409022828,
					"ssh_clone_url":          "git@github.com:ausmartway/vcs-sentinel-dev.git",
					"svn_url":                "https://github.com/ausmartway/vcs-sentinel-dev",
					"template": [
						{
							"owner":      "ausmartway",
							"repository": "terraform-template",
						},
					],
					"topics":               [],
					"visibility":           "private",
					"vulnerability_alerts": false,
				},
				"after_sensitive": {
					"pages": [],
					"template": [
						{},
					],
					"topics": [],
				},
				"after_unknown": {},
				"before": {
					"allow_merge_commit":     true,
					"allow_rebase_merge":     true,
					"allow_squash_merge":     true,
					"archive_on_destroy":     null,
					"archived":               false,
					"auto_init":              null,
					"default_branch":         "main",
					"delete_branch_on_merge": false,
					"description":            "Github repository for TFC workspace vcs-sentinel-dev",
					"etag":                   "W/\"4906460e2d262a9179da1e0094c2b56b9b60756dbb07474e399f0179aa015762\"",
					"full_name":              "ausmartway/vcs-sentinel-dev",
					"git_clone_url":          "git://github.com/ausmartway/vcs-sentinel-dev.git",
					"gitignore_template":     null,
					"has_downloads":          false,
					"has_issues":             false,
					"has_projects":           false,
					"has_wiki":               false,
					"homepage_url":           "",
					"html_url":               "https://github.com/ausmartway/vcs-sentinel-dev",
					"http_clone_url":         "https://github.com/ausmartway/vcs-sentinel-dev.git",
					"id":                     "vcs-sentinel-dev",
					"is_template":            false,
					"license_template":       null,
					"name":                   "vcs-sentinel-dev",
					"node_id":                "R_kgDOGGExbA",
					"pages":                  [],
					"private":                true,
					"repo_id":                409022828,
					"ssh_clone_url":          "git@github.com:ausmartway/vcs-sentinel-dev.git",
					"svn_url":                "https://github.com/ausmartway/vcs-sentinel-dev",
					"template": [
						{
							"owner":      "ausmartway",
							"repository": "terraform-template",
						},
					],
					"topics":               [],
					"visibility":           "private",
					"vulnerability_alerts": false,
				},
				"before_sensitive": {
					"pages": [],
					"template": [
						{},
					],
					"topics": [],
				},
			},
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
			"name":           "repo",
			"provider_name":  "registry.terraform.io/integrations/github",
			"type":           "github_repository",
		},
		{
			"address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"].tfe_workspace.workspace",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "this is a workspace for developing sentinel",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-9Vm5uBAKTt21Wfao",
					"name":                          "vcs-sentinel-dev",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"sentinel",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/vcs-sentinel-dev",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "this is a workspace for developing sentinel",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-9Vm5uBAKTt21Wfao",
					"name":                          "vcs-sentinel-dev",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"sentinel",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/vcs-sentinel-dev",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-dev\"]",
			"name":           "workspace",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"type":           "tfe_workspace",
		},
		{
			"address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].github_repository.repo",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"allow_merge_commit":     true,
					"allow_rebase_merge":     true,
					"allow_squash_merge":     true,
					"archive_on_destroy":     null,
					"archived":               false,
					"auto_init":              null,
					"delete_branch_on_merge": false,
					"description":            "Github repository for TFC workspace vcs-sentinel-mock-generator",
					"gitignore_template":     null,
					"has_downloads":          null,
					"has_issues":             null,
					"has_projects":           null,
					"has_wiki":               null,
					"homepage_url":           null,
					"is_template":            null,
					"license_template":       null,
					"name":                   "vcs-sentinel-mock-generator",
					"pages":                  [],
					"template": [
						{
							"owner":      "ausmartway",
							"repository": "terraform-template",
						},
					],
					"topics":               null,
					"visibility":           "private",
					"vulnerability_alerts": null,
				},
				"after_sensitive": {
					"pages": [],
					"template": [
						{},
					],
				},
				"after_unknown": {
					"default_branch": true,
					"etag":           true,
					"full_name":      true,
					"git_clone_url":  true,
					"html_url":       true,
					"http_clone_url": true,
					"id":             true,
					"node_id":        true,
					"pages":          [],
					"private":        true,
					"repo_id":        true,
					"ssh_clone_url":  true,
					"svn_url":        true,
					"template": [
						{},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"]",
			"name":           "repo",
			"provider_name":  "registry.terraform.io/integrations/github",
			"type":           "github_repository",
		},
		{
			"address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"].tfe_workspace.workspace",
			"change": {
				"actions": [
					"create",
				],
				"after": {
					"agent_pool_id":                 null,
					"allow_destroy_plan":            true,
					"auto_apply":                    true,
					"description":                   "this is a test workspace",
					"execution_mode":                "remote",
					"file_triggers_enabled":         false,
					"global_remote_state":           false,
					"name":                          "vcs-sentinel-mock-generator",
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    null,
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"azure",
						"badmock",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             null,
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": null,
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {
					"id":         true,
					"operations": true,
					"tag_names": [
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{
							"identifier": true,
						},
					],
				},
				"before":           null,
				"before_sensitive": false,
			},
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-sentinel-mock-generator\"]",
			"name":           "workspace",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"type":           "tfe_workspace",
		},
		{
			"address": "module.vcs-connected-workspace[\"vcs-workspaceone\"].github_repository.repo",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"allow_merge_commit":     true,
					"allow_rebase_merge":     true,
					"allow_squash_merge":     true,
					"archive_on_destroy":     null,
					"archived":               false,
					"auto_init":              null,
					"default_branch":         "main",
					"delete_branch_on_merge": false,
					"description":            "Github repository for TFC workspace vcs-workspaceone",
					"etag":                   "W/\"42fb55d146e5ed328e184def6d23d551c3bfc6bf7d844b6a4d8ed96efefc0679\"",
					"full_name":              "ausmartway/vcs-workspaceone",
					"git_clone_url":          "git://github.com/ausmartway/vcs-workspaceone.git",
					"gitignore_template":     null,
					"has_downloads":          false,
					"has_issues":             false,
					"has_projects":           false,
					"has_wiki":               false,
					"homepage_url":           "",
					"html_url":               "https://github.com/ausmartway/vcs-workspaceone",
					"http_clone_url":         "https://github.com/ausmartway/vcs-workspaceone.git",
					"id":                     "vcs-workspaceone",
					"is_template":            false,
					"license_template":       null,
					"name":                   "vcs-workspaceone",
					"node_id":                "R_kgDOGFyRlg",
					"pages":                  [],
					"private":                true,
					"repo_id":                408719766,
					"ssh_clone_url":          "git@github.com:ausmartway/vcs-workspaceone.git",
					"svn_url":                "https://github.com/ausmartway/vcs-workspaceone",
					"template": [
						{
							"owner":      "ausmartway",
							"repository": "terraform-template",
						},
					],
					"topics":               null,
					"visibility":           "private",
					"vulnerability_alerts": false,
				},
				"after_sensitive": {
					"pages": [],
					"template": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"allow_merge_commit":     true,
					"allow_rebase_merge":     true,
					"allow_squash_merge":     true,
					"archive_on_destroy":     null,
					"archived":               false,
					"auto_init":              null,
					"default_branch":         "main",
					"delete_branch_on_merge": false,
					"description":            "Github repository for TFC workspace vcs-workspaceone",
					"etag":                   "W/\"42fb55d146e5ed328e184def6d23d551c3bfc6bf7d844b6a4d8ed96efefc0679\"",
					"full_name":              "ausmartway/vcs-workspaceone",
					"git_clone_url":          "git://github.com/ausmartway/vcs-workspaceone.git",
					"gitignore_template":     null,
					"has_downloads":          false,
					"has_issues":             false,
					"has_projects":           false,
					"has_wiki":               false,
					"homepage_url":           "",
					"html_url":               "https://github.com/ausmartway/vcs-workspaceone",
					"http_clone_url":         "https://github.com/ausmartway/vcs-workspaceone.git",
					"id":                     "vcs-workspaceone",
					"is_template":            false,
					"license_template":       null,
					"name":                   "vcs-workspaceone",
					"node_id":                "R_kgDOGFyRlg",
					"pages":                  [],
					"private":                true,
					"repo_id":                408719766,
					"ssh_clone_url":          "git@github.com:ausmartway/vcs-workspaceone.git",
					"svn_url":                "https://github.com/ausmartway/vcs-workspaceone",
					"template": [
						{
							"owner":      "ausmartway",
							"repository": "terraform-template",
						},
					],
					"topics":               null,
					"visibility":           "private",
					"vulnerability_alerts": false,
				},
				"before_sensitive": {
					"pages": [],
					"template": [
						{},
					],
				},
			},
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
			"name":           "repo",
			"provider_name":  "registry.terraform.io/integrations/github",
			"type":           "github_repository",
		},
		{
			"address": "module.vcs-connected-workspace[\"vcs-workspaceone\"].tfe_workspace.workspace",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "this is a test workspace",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-21PADxvPVSoPhhY4",
					"name":                          "vcs-workspaceone",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"azure",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/vcs-workspaceone",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "this is a test workspace",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-21PADxvPVSoPhhY4",
					"name":                          "vcs-workspaceone",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"azure",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/vcs-workspaceone",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":           "managed",
			"module_address": "module.vcs-connected-workspace[\"vcs-workspaceone\"]",
			"name":           "workspace",
			"provider_name":  "registry.terraform.io/hashicorp/tfe",
			"type":           "tfe_workspace",
		},
		{
			"address": "tfe_oauth_client.github-a",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"api_url":          "https://api.github.com",
					"http_url":         "https://github.com",
					"id":               "oc-t3GmujcL2wrtPtVw",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-ECRp7Q8bau6wDuba",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "github",
				},
				"after_sensitive": {
					"oauth_token": true,
				},
				"after_unknown": {},
				"before": {
					"api_url":          "https://api.github.com",
					"http_url":         "https://github.com",
					"id":               "oc-t3GmujcL2wrtPtVw",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-ECRp7Q8bau6wDuba",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "github",
				},
				"before_sensitive": {
					"oauth_token": true,
				},
			},
			"mode":          "managed",
			"name":          "github-a",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_oauth_client",
		},
		{
			"address": "tfe_oauth_client.github-b",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"api_url":          "https://api.github.com",
					"http_url":         "https://github.com",
					"id":               "oc-SGAjYbawuMtrsVdi",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-ojKu4mCdGeqTauNo",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "github",
				},
				"after_sensitive": {
					"oauth_token": true,
				},
				"after_unknown": {},
				"before": {
					"api_url":          "https://api.github.com",
					"http_url":         "https://github.com",
					"id":               "oc-SGAjYbawuMtrsVdi",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-ojKu4mCdGeqTauNo",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "github",
				},
				"before_sensitive": {
					"oauth_token": true,
				},
			},
			"mode":          "managed",
			"name":          "github-b",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_oauth_client",
		},
		{
			"address": "tfe_oauth_client.gitlab-a",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"api_url":          "https://gitlab.com/api/v4",
					"http_url":         "https://gitlab.com",
					"id":               "oc-aYUXRhfWXVSavhTC",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-19AYi7if8fjhffFP",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "gitlab_hosted",
				},
				"after_sensitive": {
					"oauth_token": true,
				},
				"after_unknown": {},
				"before": {
					"api_url":          "https://gitlab.com/api/v4",
					"http_url":         "https://gitlab.com",
					"id":               "oc-aYUXRhfWXVSavhTC",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-19AYi7if8fjhffFP",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "gitlab_hosted",
				},
				"before_sensitive": {
					"oauth_token": true,
				},
			},
			"mode":          "managed",
			"name":          "gitlab-a",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_oauth_client",
		},
		{
			"address": "tfe_oauth_client.gitlab-b",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"api_url":          "https://gitlab.com/api/v4",
					"http_url":         "https://gitlab.com",
					"id":               "oc-fvJx34NHKZqH7PaR",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-w2DuTSTfyhqDm3tS",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "gitlab_hosted",
				},
				"after_sensitive": {
					"oauth_token": true,
				},
				"after_unknown": {},
				"before": {
					"api_url":          "https://gitlab.com/api/v4",
					"http_url":         "https://gitlab.com",
					"id":               "oc-fvJx34NHKZqH7PaR",
					"oauth_token":      "REDACTED_SENSITIVE",
					"oauth_token_id":   "ot-w2DuTSTfyhqDm3tS",
					"organization":     "yulei",
					"private_key":      null,
					"service_provider": "gitlab_hosted",
				},
				"before_sensitive": {
					"oauth_token": true,
				},
			},
			"mode":          "managed",
			"name":          "gitlab-b",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_oauth_client",
		},
		{
			"address": "tfe_run_trigger.auto_trigger_tfc-credential-injector",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"id":            "rt-CjdbnGnVzB2WMTne",
					"sourceable_id": "ws-seQ28ryqi1xfKRr1",
					"workspace_id":  "ws-AqoXHpbhwdLKroVw",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"id":            "rt-CjdbnGnVzB2WMTne",
					"sourceable_id": "ws-seQ28ryqi1xfKRr1",
					"workspace_id":  "ws-AqoXHpbhwdLKroVw",
				},
				"before_sensitive": {},
			},
			"mode":          "managed",
			"name":          "auto_trigger_tfc-credential-injector",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_run_trigger",
		},
		{
			"address": "tfe_run_trigger.auto_trigger_tfc-notification-configurator",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"id":            "rt-bCSKhTJa5UGZZA3X",
					"sourceable_id": "ws-seQ28ryqi1xfKRr1",
					"workspace_id":  "ws-NnA88UfvetLFM9JX",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"id":            "rt-bCSKhTJa5UGZZA3X",
					"sourceable_id": "ws-seQ28ryqi1xfKRr1",
					"workspace_id":  "ws-NnA88UfvetLFM9JX",
				},
				"before_sensitive": {},
			},
			"mode":          "managed",
			"name":          "auto_trigger_tfc-notification-configurator",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_run_trigger",
		},
		{
			"address": "tfe_run_trigger.auto_trigger_tfc-policy-attacher",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"id":            "rt-b3RZ8Ce4MbGPNykd",
					"sourceable_id": "ws-seQ28ryqi1xfKRr1",
					"workspace_id":  "ws-Hqt6WoDvG4VjJRWV",
				},
				"after_sensitive": {},
				"after_unknown":   {},
				"before": {
					"id":            "rt-b3RZ8Ce4MbGPNykd",
					"sourceable_id": "ws-seQ28ryqi1xfKRr1",
					"workspace_id":  "ws-Hqt6WoDvG4VjJRWV",
				},
				"before_sensitive": {},
			},
			"mode":          "managed",
			"name":          "auto_trigger_tfc-policy-attacher",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_run_trigger",
		},
		{
			"address": "tfe_variable.aws-lambda-example-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-kKRoHMpVMj1cajMo",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-s3arZoJTyfvg32YM",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-kKRoHMpVMj1cajMo",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-s3arZoJTyfvg32YM",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "aws-lambda-example-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.aws-s3-demo-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-o6jsEdkNosgeNLYV",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-fypzJQtNiwEPTsFp",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-o6jsEdkNosgeNLYV",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-fypzJQtNiwEPTsFp",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "aws-s3-demo-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.aws-shared-infra-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-6LxWKub7QWq4APJT",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-MiQBojMDAVpxnSEN",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-6LxWKub7QWq4APJT",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-MiQBojMDAVpxnSEN",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "aws-shared-infra-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.multi-env-provisioning-example-0-test-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-C7h9fWokXE34NAic",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-RW99m8Qucacx6t2P",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-C7h9fWokXE34NAic",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-RW99m8Qucacx6t2P",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "multi-env-provisioning-example-0-test-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.multi-env-provisioning-example-1-staging-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-jR1g6aC7dFwQM89q",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-tQj6j9SPMRLAXrmF",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-jR1g6aC7dFwQM89q",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-tQj6j9SPMRLAXrmF",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "multi-env-provisioning-example-1-staging-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.multi-env-provisioning-example-2-prod-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-MR6MZi14nrJU87pQ",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-QuU3xTMss2VAcRHy",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-MR6MZi14nrJU87pQ",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-QuU3xTMss2VAcRHy",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "multi-env-provisioning-example-2-prod-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.multicloud-dns-management-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-jhAUNhkdqDev2izC",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-ZedC2mWXBZu9paho",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-jhAUNhkdqDev2izC",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-ZedC2mWXBZu9paho",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "multicloud-dns-management-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.terraform-aws-vault-demo-aws_region",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-VVTfpnMZNQUgNrtY",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-YGA4SmRLBbDv1jkP",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "env",
					"description":  "AWS REGION",
					"hcl":          false,
					"id":           "var-VVTfpnMZNQUgNrtY",
					"key":          "AWS_REGION",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-YGA4SmRLBbDv1jkP",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "terraform-aws-vault-demo-aws_region",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.tfc-policyset-attacher-orgnization",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "terraform",
					"description":  "TFC/E organization",
					"hcl":          false,
					"id":           "var-LkBpeoQMWtBdwKiw",
					"key":          "organization",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "terraform",
					"description":  "TFC/E organization",
					"hcl":          false,
					"id":           "var-LkBpeoQMWtBdwKiw",
					"key":          "organization",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "tfc-policyset-attacher-orgnization",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_variable.tfc-policyset-attacher-tfc_oauth_token_id",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"category":     "terraform",
					"description":  "VCS connection oauth token id",
					"hcl":          false,
					"id":           "var-eq5XaDFH9rYnvKhS",
					"key":          "tfc_oauth_token_id",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
				},
				"after_sensitive": {
					"value": true,
				},
				"after_unknown": {},
				"before": {
					"category":     "terraform",
					"description":  "VCS connection oauth token id",
					"hcl":          false,
					"id":           "var-eq5XaDFH9rYnvKhS",
					"key":          "tfc_oauth_token_id",
					"sensitive":    false,
					"value":        "REDACTED_SENSITIVE",
					"workspace_id": "ws-Hqt6WoDvG4VjJRWV",
				},
				"before_sensitive": {
					"value": true,
				},
			},
			"mode":          "managed",
			"name":          "tfc-policyset-attacher-tfc_oauth_token_id",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_variable",
		},
		{
			"address": "tfe_workspace.aws-lambda-example",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Demo workspace for deploying lambda functions.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-s3arZoJTyfvg32YM",
					"name":                          "aws-lambda-example",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/aws-lambda-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Demo workspace for deploying lambda functions.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-s3arZoJTyfvg32YM",
					"name":                          "aws-lambda-example",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/aws-lambda-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "aws-lambda-example",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.aws-s3-demo",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-fypzJQtNiwEPTsFp",
					"name":                          "aws-s3-demo",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/aws-s3-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A simple demo to show how sentinel policy as code engine can make sure s3 are provisioned securely.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-fypzJQtNiwEPTsFp",
					"name":                          "aws-s3-demo",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/aws-s3-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "aws-s3-demo",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.aws-shared-infra",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "My core aws infrustructure that are shared by other workspaces.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-MiQBojMDAVpxnSEN",
					"name":                          "aws-shared-infra",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"internal",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/terraform-aws-core",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "My core aws infrustructure that are shared by other workspaces.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-MiQBojMDAVpxnSEN",
					"name":                          "aws-shared-infra",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"internal",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/terraform-aws-core",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "aws-shared-infra",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.azure-shared-infra",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Core azure infra",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-1udCpTYjSbHKAztQ",
					"name":                          "azure-shared-infra",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"azure",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/azure-shared-infra",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Core azure infra",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-1udCpTYjSbHKAztQ",
					"name":                          "azure-shared-infra",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"azure",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/azure-shared-infra",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "azure-shared-infra",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.azure-simple-demo",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A simple demo of deploying Azure resources.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-8eq1qbSakTSYn1G1",
					"name":                          "azure-simple-demo",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"azure",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/azure-basic-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A simple demo of deploying Azure resources.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-8eq1qbSakTSYn1G1",
					"name":                          "azure-simple-demo",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"azure",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/azure-basic-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "azure-simple-demo",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.gcp-playground",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A simple demo of deploying gcp resources.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-u6uJ91U3VSWVv8R9",
					"name":                          "gcp-playground",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"customerfacing",
						"gcp",
						"internal",
						"testing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/gcp-playground",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A simple demo of deploying gcp resources.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-u6uJ91U3VSWVv8R9",
					"name":                          "gcp-playground",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"customerfacing",
						"gcp",
						"internal",
						"testing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/gcp-playground",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "gcp-playground",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.multi-env-provisioning-example-0-test",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-RW99m8Qucacx6t2P",
					"name":                          "multi-env-provisioning-example-0-test",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/multi-env-provisioning-example",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-RW99m8Qucacx6t2P",
					"name":                          "multi-env-provisioning-example-0-test",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/multi-env-provisioning-example",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "multi-env-provisioning-example-0-test",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.multi-env-provisioning-example-1-staging",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-tQj6j9SPMRLAXrmF",
					"name":                          "multi-env-provisioning-example-1-staging",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/multi-env-provisioning-example",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-tQj6j9SPMRLAXrmF",
					"name":                          "multi-env-provisioning-example-1-staging",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/multi-env-provisioning-example",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "multi-env-provisioning-example-1-staging",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.multi-env-provisioning-example-2-prod",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-QuU3xTMss2VAcRHy",
					"name":                          "multi-env-provisioning-example-2-prod",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/multi-env-provisioning-example",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A demo showing how to manage multiple enviroments using one set of terraform code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-QuU3xTMss2VAcRHy",
					"name":                          "multi-env-provisioning-example-2-prod",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"customerfacing",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/multi-env-provisioning-example",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "multi-env-provisioning-example-2-prod",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.multicloud-dns-management",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Manages my aws/azure/gcp DNS records using aws route53.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-ZedC2mWXBZu9paho",
					"name":                          "multicloud-dns-management",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"azure",
						"gcp",
						"internal",
					],
					"terraform_version": "0.12.31",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/dns-multicloud",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Manages my aws/azure/gcp DNS records using aws route53.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-ZedC2mWXBZu9paho",
					"name":                          "multicloud-dns-management",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"azure",
						"gcp",
						"internal",
					],
					"terraform_version": "0.12.31",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/dns-multicloud",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "multicloud-dns-management",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.terraform-aws-vault-demo",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that standup a demo vault instance.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-YGA4SmRLBbDv1jkP",
					"name":                          "terraform-aws-vault-demo",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"internal",
						"vault",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/terraform-aws-vault-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"tag_names": [
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that standup a demo vault instance.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   true,
					"id":                            "ws-YGA4SmRLBbDv1jkP",
					"name":                          "terraform-aws-vault-demo",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     null,
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"internal",
						"vault",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/terraform-aws-vault-demo",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"tag_names": [
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "terraform-aws-vault-demo",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.tfc-config-as-code",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
					"execution_mode":        "remote",
					"file_triggers_enabled": true,
					"global_remote_state":   false,
					"id":                            "ws-seQ28ryqi1xfKRr1",
					"name":                          "tfc-config-as-code",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-config-as-code",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "Workspace for managing my own TFC orgnisation's configuration as code, using terraform.",
					"execution_mode":        "remote",
					"file_triggers_enabled": true,
					"global_remote_state":   false,
					"id":                            "ws-seQ28ryqi1xfKRr1",
					"name":                          "tfc-config-as-code",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-config-as-code",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "tfc-config-as-code",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.tfc-credential-injector",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-AqoXHpbhwdLKroVw",
					"name":                          "tfc-credential-injector",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-credential-injector",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that will inject aws and azure credentials to other workspaces automaticly.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-AqoXHpbhwdLKroVw",
					"name":                          "tfc-credential-injector",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-credential-injector",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "tfc-credential-injector",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.tfc-notification-configurator",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-NnA88UfvetLFM9JX",
					"name":                          "tfc-notification-configurator",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-notification-configurator",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-NnA88UfvetLFM9JX",
					"name":                          "tfc-notification-configurator",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-notification-configurator",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "tfc-notification-configurator",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.tfc-policyset-attacher",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-Hqt6WoDvG4VjJRWV",
					"name":                          "tfc-policyset-attacher",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-policyset-attacher",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that will configure TFC/E notifications based on tag automaticly.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-Hqt6WoDvG4VjJRWV",
					"name":                          "tfc-policyset-attacher",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                true,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"internal",
						"management",
						"tfc",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/tfc-policyset-attacher",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "tfc-policyset-attacher",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.vault-config-as-code",
			"change": {
				"actions": [
					"no-op",
				],
				"after": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that's used to manage my own Vault's configuration as code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-a7NAPAZ1c38P8u4U",
					"name":                          "vault-config-as-code",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"aws",
						"customerfacing",
						"vault",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/vault-config-as-code",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"after_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
				"after_unknown": {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "A workspace that's used to manage my own Vault's configuration as code.",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-a7NAPAZ1c38P8u4U",
					"name":                          "vault-config-as-code",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           true,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"aws",
						"customerfacing",
						"vault",
					],
					"terraform_version": "1.0.7",
					"trigger_prefixes":  [],
					"vcs_repo": [
						{
							"branch":             "",
							"identifier":         "ausmartway/vault-config-as-code",
							"ingress_submodules": false,
							"oauth_token_id":     "ot-ECRp7Q8bau6wDuba",
						},
					],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo": [
						{},
					],
				},
			},
			"mode":          "managed",
			"name":          "vault-config-as-code",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
		{
			"address": "tfe_workspace.workspace[\"non-vcs-workspace-example-demo-for-bhp\"]",
			"change": {
				"actions": [
					"delete",
				],
				"after_sensitive": false,
				"after_unknown":   {},
				"before": {
					"agent_pool_id":         "",
					"allow_destroy_plan":    true,
					"auto_apply":            true,
					"description":           "non-vcs-workspace-example-demo-for-bhp",
					"execution_mode":        "remote",
					"file_triggers_enabled": false,
					"global_remote_state":   false,
					"id":                            "ws-suocxcRmS6p1cfin",
					"name":                          "non-vcs-workspace-example-demo-for-bhp",
					"operations":                    true,
					"organization":                  "yulei",
					"queue_all_runs":                false,
					"remote_state_consumer_ids":     [],
					"speculative_enabled":           false,
					"ssh_key_id":                    "",
					"structured_run_output_enabled": true,
					"tag_names": [
						"autoinject",
						"aws",
						"azure",
						"bhp",
						"customerfacing",
						"tfc",
					],
					"terraform_version": "1.0.6",
					"trigger_prefixes":  [],
					"vcs_repo":          [],
					"working_directory": "",
				},
				"before_sensitive": {
					"remote_state_consumer_ids": [],
					"tag_names": [
						false,
						false,
						false,
						false,
						false,
						false,
					],
					"trigger_prefixes": [],
					"vcs_repo":         [],
				},
			},
			"index":         "non-vcs-workspace-example-demo-for-bhp",
			"mode":          "managed",
			"name":          "workspace",
			"provider_name": "registry.terraform.io/hashicorp/tfe",
			"type":          "tfe_workspace",
		},
	],
	"terraform_version": "1.0.7",
	"variables": {
		"aws_default_region": {
			"value": "ap-southeast-2",
		},
		"github_personal_token": {
			"value": "REDACTED_SENSITIVE",
		},
		"gitlab_personal_token": {
			"value": "REDACTED_SENSITIVE",
		},
		"organization": {
			"value": "yulei",
		},
		"tfe_token": {
			"value": "REDACTED_SENSITIVE",
		},
	},
}
